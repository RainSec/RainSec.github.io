{"title":"Goby指纹与POC提取复现","uid":"84026449195101da50b0cdf96b2a3940","slug":"Goby指纹和POC提取","date":"2022-09-30T02:48:45.000Z","updated":"2023-09-29T03:48:35.105Z","comments":true,"path":"api/articles/Goby指纹和POC提取.json","keywords":null,"cover":"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220930/image.x02df1872g.webp","content":"<h1 id=\"Goby指纹与POC提取复现\"><a href=\"#Goby指纹与POC提取复现\" class=\"headerlink\" title=\"Goby指纹与POC提取复现\"></a>Goby指纹与POC提取复现</h1><p>最近看了w8ay师傅发的关于提取Goby指纹的帖子，发现自己加入师傅的知识星球却一直没认真学习过实在是难顶嗷，根据师傅的帖子来复现自己提取一下，补上第一期的作业。</p>\n<h2 id=\"Goby指纹提取\"><a href=\"#Goby指纹提取\" class=\"headerlink\" title=\"Goby指纹提取\"></a>Goby指纹提取</h2><p>首先是指纹提取，这里也分别准备了三个版本的Goby文件进行复现，分别是1.4.76、1.7.192和1.8.279</p>\n<h3 id=\"1-4-76\"><a href=\"#1-4-76\" class=\"headerlink\" title=\"1.4.76\"></a>1.4.76</h3><p>因为版本比较低所以不需要我们手动去从goby程序里提crules，直接用winhex打开<br><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/Pasted-image-20220927205348.6efba3mc0j00.webp\"><br>笔者从事的工作与Yara息息相关，但是从来没有深入的去了解Yara的原理和流程，只是把它当作加强版的正则，从来没有想过能用来进行指纹识别，愧疚愧疚~~</p>\n<p><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/Pasted-image-20220927205630.2cfsp2nwmlus.webp\"><br>到这里已经看到出现指纹了，接下来就是将指纹提取出来，笔者在复现的时候起初以为自己写过Yara规则，猜测每个规则都是rule_id开头，然后后面跟字段，妹有好好观察，最后还是老老实实寻找开始和结束段。<br>我们提取的内容应该是以rules_0开始，按照师傅的文章正是从default之后开始进行提取，所以开始字段为<code>64 65 66 61 75 6C 74 00</code> ，往下寻找结束的标记，从图上可以看出结束的标记为<code>66 6F 65 79 65</code><br><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/Pasted-image-20220927210430.7efe7ytm4mc0.webp\"></p>\n<p>接下来就是将这两段之间的内容提取出来，笔者最近正好在学习Go，就用Go写了个辣眼的提取脚本</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"io/ioutil\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"strings\"</span>\n    <span class=\"token string\">\"os\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    f<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home/ubuntu/go/gopro/crules\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"read fail\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>\n    fileName <span class=\"token operator\">:=</span> <span class=\"token string\">\"finger.txt\"</span>\n    <span class=\"token keyword\">var</span> d1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">,</span> err3 <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span> <span class=\"token comment\">//创建文件</span>\n    <span class=\"token keyword\">if</span> err3 <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">{</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"create file fail\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">defer</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    n2<span class=\"token punctuation\">,</span> err3 <span class=\"token operator\">:=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">)</span> <span class=\"token comment\">//写入文件(字节数组)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"写入 %d 个字节n\"</span><span class=\"token punctuation\">,</span> n2<span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span><span class=\"token function\">Sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    crules <span class=\"token operator\">:=</span> <span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    start <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Index</span><span class=\"token punctuation\">(</span>crules<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\x64\\x65\\x66\\x61\\x75\\x6C\\x74\\x00\"</span><span class=\"token punctuation\">)</span>\n    end <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Index</span><span class=\"token punctuation\">(</span>crules<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\x00\\x00\\x66\\x6F\\x65\\x79\\x65\\x00\"</span><span class=\"token punctuation\">)</span>\n    finger <span class=\"token operator\">:=</span> crules<span class=\"token punctuation\">[</span>start <span class=\"token punctuation\">:</span> end<span class=\"token punctuation\">]</span>\n    <span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>finger<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/Pasted-image-20220927214744.5ysoua033fg0.webp\"></p>\n<p>真的辣眼睛，因为妹有做分割，真没眼看。。。。</p>\n<p>接下来就是进行分割，观察不同的rule_id之间的字节<br><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/Pasted-image-20220927213623.3zwsqrnq73m0.webp\"></p>\n<p><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/Pasted-image-20220927213654.3f5jzeybxji0.webp\"><br>由此可以确定不同规则rule_id之间的分隔符为<code>\\x00\\x00\\x00\\x00\\x73\\x00</code> ,不同字段之间的分隔符为<code>\\x00</code> </p>\n<p>尝试对其进行拆分，这段写得太辣眼睛了，还是放师傅的脚本吧</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">filename <span class=\"token operator\">=</span> <span class=\"token string\">r\"crules\"</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nstart <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">b\"default\\x00fofa\"</span><span class=\"token punctuation\">)</span>\nend <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">b\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">:</span>end<span class=\"token punctuation\">]</span>\ndatas <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">b\"rule_id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\nsep <span class=\"token operator\">=</span> <span class=\"token string\">b\"\\x00\"</span>\noptions_set <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nresults <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> datas<span class=\"token punctuation\">:</span>\n    ff <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>sep<span class=\"token punctuation\">)</span>\n    rule_id <span class=\"token operator\">=</span> ff<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    level <span class=\"token operator\">=</span> ff<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    softhard <span class=\"token operator\">=</span> ff<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    product <span class=\"token operator\">=</span> ff<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    company <span class=\"token operator\">=</span> ff<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    category <span class=\"token operator\">=</span> ff<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    parent_category <span class=\"token operator\">=</span> ff<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    dd <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"rule_id\"</span><span class=\"token punctuation\">:</span> rule_id<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"level\"</span><span class=\"token punctuation\">:</span> level<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"softhard\"</span><span class=\"token punctuation\">:</span> softhard<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"product\"</span><span class=\"token punctuation\">:</span> product<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"company\"</span><span class=\"token punctuation\">:</span> company<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"category\"</span><span class=\"token punctuation\">:</span> category<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"parent_category\"</span><span class=\"token punctuation\">:</span> parent_category<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"rules\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n    bb <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ff<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    s <span class=\"token operator\">=</span> bb<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00\\x00\\x00\\x00\\x73\\x00'</span><span class=\"token punctuation\">)</span>\n    _rr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> rr <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span>\n        _rules <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> rr<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">b'fofa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n        index <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">while</span> index <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            prefixx <span class=\"token operator\">=</span> <span class=\"token string\">b\"fofa\\x00\"</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                start <span class=\"token operator\">=</span> rr<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>prefixx<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prefixx<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            end <span class=\"token operator\">=</span> rr<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">)</span>\n            match_way <span class=\"token operator\">=</span> rr<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">:</span>end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            _length <span class=\"token operator\">=</span> rr<span class=\"token punctuation\">[</span>end <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            content <span class=\"token operator\">=</span> rr<span class=\"token punctuation\">[</span>end <span class=\"token operator\">+</span> <span class=\"token number\">9</span><span class=\"token punctuation\">:</span>end <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">+</span> _length<span class=\"token punctuation\">]</span>\n            index <span class=\"token operator\">=</span> end <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">+</span> _length\n            _rules<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token string\">\"match\"</span><span class=\"token punctuation\">:</span> match_way<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">:</span> content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> errors<span class=\"token operator\">=</span><span class=\"token string\">\"ignore\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span>\n        _rr2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>_rules<span class=\"token punctuation\">)</span>\n    dd<span class=\"token punctuation\">[</span><span class=\"token string\">\"rules\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _rr2\n    results<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>dd<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fofa.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> json\n    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>最后得到结果如下</p>\n<p><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/Pasted-image-20220927223539.6p7nldhpe340.webp\"></p>\n<h3 id=\"1-7-192\"><a href=\"#1-7-192\" class=\"headerlink\" title=\"1.7.192\"></a>1.7.192</h3><p>1.7.192版本不在含有crules文件，它被包含在了可执行程序中，打开可执行程序可以看到其中引用了<code>github.com/rakyll/statik/fs</code> 库，官方的描述如下：<br><code>statik allows you to embed a directory of static files into your Go binary</code><br>根据师傅的文章，我们也可以查看fs的源码<br><a href=\"https://github.com/rakyll/statik/blob/master/fs/fs.go\">fs.go的源码</a><br>发现该库即是生成了ZIP内嵌在程序中<br>笔者之前有过一些Misc经验（雾，这里列出常见的文件头</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>文件头</th>\n<th>文件尾</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>JEPG</td>\n<td>FFD8FF</td>\n<td>FFD9</td>\n</tr>\n<tr>\n<td>PNG</td>\n<td>89504E47</td>\n<td>AE426082</td>\n</tr>\n<tr>\n<td>GIF</td>\n<td>47484638</td>\n<td>003B</td>\n</tr>\n<tr>\n<td>ZIP</td>\n<td>504B0304</td>\n<td>504B</td>\n</tr>\n<tr>\n<td>TIFF</td>\n<td>49492A00</td>\n<td></td>\n</tr>\n<tr>\n<td>XML</td>\n<td>68746D6C3E</td>\n<td></td>\n</tr>\n<tr>\n<td>PDF</td>\n<td>25504446</td>\n<td></td>\n</tr>\n<tr>\n<td>RAR</td>\n<td>52617221</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>这里搜索ZIP的格式头<code>50 4B 03 04</code> 即可定位到压缩包的起始位置</p>\n<p><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/image.5ndi5mufazw0.png\"></p>\n<p>看到crules，就应该是这个压缩包了，接下来就是寻找结尾进行提取压缩包文件。因为<code>50 4B 03 04</code> 这段数据在文本中有很多，在进行提取的时候可以多选几个字节进行准确定位，这里师傅网友多定了一个字节到<code>50 4B 03 04 14 00 08 00 08 00</code></p>\n<p>接下来寻找压缩包结尾，先看看<code>50 4B</code> 的搜索结果<br><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/image.2e4qv9eoqr28.png\"></p>\n<p>在搜索开始头的时候就能看到存在这么多的<code>50 4B</code> 如果直接提取到下一个<code>50 4B</code> 无法判断压缩包的准确性，借鉴师傅的解决方法，每次读字节并且尝试解压，代码如下：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># @Author  : w8ay</span>\n<span class=\"token keyword\">import</span> zipfile\n<span class=\"token keyword\">from</span> io <span class=\"token keyword\">import</span> BytesIO\n\nfilename <span class=\"token operator\">=</span> <span class=\"token string\">\"goby-cmd-linux\"</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> stream<span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    start <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x50\\x4B\\x03\\x04\\x14\\x00\\x08\\x00\\x08\\x00'</span><span class=\"token punctuation\">)</span>\n    end <span class=\"token operator\">=</span> start <span class=\"token operator\">+</span> <span class=\"token number\">1200</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    fenli <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">:</span>end<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        fio <span class=\"token operator\">=</span> BytesIO<span class=\"token punctuation\">(</span>fenli<span class=\"token punctuation\">)</span>\n        f <span class=\"token operator\">=</span> zipfile<span class=\"token punctuation\">.</span>ZipFile<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token operator\">=</span>fio<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fenli<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fenli<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fenli<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>namelist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">except</span> zipfile<span class=\"token punctuation\">.</span>BadZipFile<span class=\"token punctuation\">:</span>\n        end <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.zip\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>fenli<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>成功分离出crules_1.7.192，用之前的提取脚本提取即可</p>\n<p><del>这个微微离谱的指纹还在</del></p>\n<p><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/image.21ucigcs7ie8.png\"></p>\n<h2 id=\"Goby-Poc提取\"><a href=\"#Goby-Poc提取\" class=\"headerlink\" title=\"Goby Poc提取\"></a>Goby Poc提取</h2><p>Goby的POC分为json与go两种格式，本次只尝试提取json’格式（wtcldbq</p>\n<p>用winhex打开可执行程序观察</p>\n<p><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/image.7cr1bfp8q840.png\"></p>\n<p>可以直接确认Name段，那么提取数据的起始段也可以确认为<code>\\x23\\x7B\\x0A\\x20\\x20\\x22\\x4E\\x61\\x6D\\x65\\x22\\x3A\\x20</code><br><del>（在看的时候搜索Name字段第二个处的CS字段与下面不同，不知道为啥师傅没有提取</del><br>结束段标记为<code>\\x65\\x0A\\x7D\\x0A\\x66\\x75\\x6E\\x63\\x74\\x69\\x6F\\x6E</code></p>\n<p>暴力提取辣眼脚本：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"io/ioutil\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"strings\"</span>\n    <span class=\"token string\">\"os\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    f<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"goby_1.8\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"read fail\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fileName <span class=\"token operator\">:=</span> <span class=\"token string\">\"finger.json\"</span>\n    <span class=\"token keyword\">var</span> d1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">,</span> err3 <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span> <span class=\"token comment\">//创建文件</span>\n    <span class=\"token keyword\">if</span> err3 <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">{</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"create file fail\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">defer</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    n2<span class=\"token punctuation\">,</span> err3 <span class=\"token operator\">:=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">)</span> <span class=\"token comment\">//写入文件(字节数组)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"写入 %d 个字节n\"</span><span class=\"token punctuation\">,</span> n2<span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span><span class=\"token function\">Sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    crules <span class=\"token operator\">:=</span> <span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    start <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Index</span><span class=\"token punctuation\">(</span>crules<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\x23\\x7B\\x0A\\x20\\x20\\x22\\x4E\\x61\\x6D\\x65\\x22\\x3A\\x20\"</span><span class=\"token punctuation\">)</span>\n    end <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Index</span><span class=\"token punctuation\">(</span>crules<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\x65\\x0A\\x7D\\x0A\\x66\\x75\\x6E\\x63\\x74\\x69\\x6F\\x6E\"</span><span class=\"token punctuation\">)</span>\n    finger <span class=\"token operator\">:=</span> crules<span class=\"token punctuation\">[</span>start <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span> end <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n    <span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>finger<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>提取结果如下<br><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/image.3m0ztpkxvt40.png\"></p>\n<p>但是存在一些不可见字符干扰，后续再优化</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>首先是 W8ay师傅太强了orz，后面到了逆向yara虚拟机的程度，对字符处理也很细节，学，学无止境。<br>wtcl。。<br><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/aaa.qtgewqib3bk.jpg\"></p>\n<p>以后要忠实的做好每一个大佬的舔狗</p>\n<p><img src=\"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220928/qq.5hrr22slzeo0.jpg\"></p>\n","text":"Goby指纹与POC提取复现最近看了w8ay师傅发的关于提取Goby指纹的帖子，发现自己加入师傅的知识星球却一直没认真学习过实在是难顶嗷，根据师傅的帖子来复现自己提取一下，补上第一期的作业。 Goby...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":3,"path":"api/tags/渗透测试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Goby%E6%8C%87%E7%BA%B9%E4%B8%8EPOC%E6%8F%90%E5%8F%96%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">Goby指纹与POC提取复现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Goby%E6%8C%87%E7%BA%B9%E6%8F%90%E5%8F%96\"><span class=\"toc-text\">Goby指纹提取</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-76\"><span class=\"toc-text\">1.4.76</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-7-192\"><span class=\"toc-text\">1.7.192</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Goby-Poc%E6%8F%90%E5%8F%96\"><span class=\"toc-text\">Goby Poc提取</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol>","author":{"name":"RainSec","slug":"blog-author","avatar":"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220714/logo.jpg","link":"/","description":"艺术家思维去思考问题，工匠创造精神去开发","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"AddressSanitizer 漏洞检测技术剖析","uid":"9830e1ecf0b844b9805cff1f477e18bc","slug":"AddressSanitizer","date":"2022-10-08T07:07:45.000Z","updated":"2023-09-29T03:48:35.021Z","comments":true,"path":"api/articles/AddressSanitizer.json","keywords":null,"cover":"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20221015/sanitizers.5w0qyt2gbqg0.webp","text":"AddressSanitizer 漏洞检测技术剖析 类似AFL之类的Fuzzing技术不断强大的一个核心原因就是漏洞检测能力的不断增强，作为AFL这款经典工具的核心，ASAN的漏洞检测核心能力值得关注...","link":"","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[{"name":"漏洞挖掘","slug":"漏洞挖掘","count":6,"path":"api/categories/漏洞挖掘.json"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","count":2,"path":"api/tags/漏洞挖掘.json"}],"author":{"name":"RainSec","slug":"blog-author","avatar":"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220714/logo.jpg","link":"/","description":"艺术家思维去思考问题，工匠创造精神去开发","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Fastjson 1.2.80调试小记","uid":"fb1b22e9cffe64caefaaf1ad19f54d41","slug":"fastjson 1.2.80调试小记","date":"2022-09-27T10:38:45.000Z","updated":"2023-09-29T03:48:35.085Z","comments":true,"path":"api/articles/fastjson 1.2.80调试小记.json","keywords":null,"cover":"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220930/image.5hsjeydq0cg0.png","text":"fastjson 1.2.68 反序列化rce探索前言 fastjson 1.2.68 目前公开的利用链中比较好用的是voidfyoo师傅的Commons IO 写文件链子，但是在spring环境下，...","link":"","photos":[],"count_time":{"symbolsCount":"8.5k","symbolsTime":"8 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":3,"path":"api/tags/渗透测试.json"}],"author":{"name":"RainSec","slug":"blog-author","avatar":"https://jsd.cdn.zzko.cn/gh/L2ksy0d/image-host@master/20220714/logo.jpg","link":"/","description":"艺术家思维去思考问题，工匠创造精神去开发","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}